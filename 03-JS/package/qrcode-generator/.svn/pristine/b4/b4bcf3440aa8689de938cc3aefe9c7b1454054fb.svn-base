{"version":3,"file":"js/203.8c390f85.js","mappings":"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","sources":["webpack://qrcode-generator-webui/./src/api/dict.js","webpack://qrcode-generator-webui/./src/api/rule.js","webpack://qrcode-generator-webui/./src/commons/enum.js","webpack://qrcode-generator-webui/./src/commons/utils.js","webpack://qrcode-generator-webui/./src/views/Rule.vue","webpack://qrcode-generator-webui/./src/views/Rule.vue?4a13"],"sourcesContent":["import request from '../axios/request'\r\n\r\n/** 根据schemeId和level查询树结构 */\r\nexport function getDictsForTreeBySchemeIdAndLevelForCascader(params) {\r\n    return request({\r\n        url: `/dict/scheme_id/${params.schemeId}/level/${params.level}`,\r\n        method: 'GET',\r\n    })\r\n}\r\n\r\n/** 根据schemeId查询树结构 */\r\nexport function getDictsForTreeBySchemeIdForTree(conditions) {\r\n    return request({\r\n        url: `/dict/scheme_id/${conditions.schemeId}`,\r\n        method: 'GET',\r\n    })\r\n}\r\n\r\n/** 新增Dict */\r\nexport function addDict(dict) {\r\n    return request({\r\n        url: '/dict',\r\n        method: 'POST',\r\n        data: dict\r\n    })\r\n}\r\n\r\n/** 根据id删除Dict */\r\nexport function deleteDictByIdRecursive(id) {\r\n    return request({\r\n        url: `/dict/recursive/${id}`,\r\n        method: 'DELETE',\r\n    })\r\n}\r\n\r\n/** 根据dictCode查询parentId，根据parentId查询树结构 */\r\nexport function getDictsForSelectOptionsByParentIdFromSchemeIdAndDictCode(params) {\r\n    return request({\r\n        url: `/dict/scheme_id/${params.schemeId}/dict_code/${params.dictCode}`,\r\n        method: 'GET',\r\n    })\r\n}\r\n\r\n/** 更新Dict */\r\nexport function updateDict(dict) {\r\n    return request({\r\n        url: '/dict',\r\n        method: 'PUT',\r\n        data: dict\r\n    })\r\n}","import request from '../axios/request'\r\n\r\n/**新增规则 */\r\nexport function addRule(data) {\r\n    return request({\r\n        url: '/rule',\r\n        method: 'POST',\r\n        data: data\r\n    })\r\n}\r\n\r\n/**根据schemeId查询该产品的所有条码生成规则-下拉框专用 */\r\nexport function getRulesBySchemeIdForSelect(schemeId) {\r\n    return request({\r\n        url: `/rule/for_select/${schemeId}`,\r\n        method: 'GET',\r\n    })\r\n}\r\n\r\n/**获取所有规则-分页版 */\r\nexport function getRulesPagination(pagingParameters) {\r\n    return request({\r\n        url: `/rule/pagination/${pagingParameters.currentPage}/${pagingParameters.pageSize}`,\r\n        method: 'GET',\r\n    })\r\n}\r\n\r\n/**根据规则名称获取所有规则-分页版 */\r\nexport function getRulesByRuleNamePagination(pagingParameters,conditions) {\r\n    return request({\r\n        url: `/rule/pagination/${pagingParameters.currentPage}/${pagingParameters.pageSize}/${conditions.ruleName == '' ? null : conditions.ruleName}`,\r\n        method: 'GET',\r\n    })\r\n}\r\n\r\n/**根据id删除方案 */\r\nexport function deleteRuleById(id) {\r\n    return request({\r\n        url: `/rule/${id}`,\r\n        method: 'DELETE',\r\n    })\r\n}\r\n\r\n/**更新规则 */\r\nexport function updateRule(data) {\r\n    return request({\r\n        url: '/rule',\r\n        method: 'PUT',\r\n        data: data\r\n    })\r\n}","/**\r\n * 规则字段类型枚举\r\n */\r\nexport const RuleFieldTypeEnum_ = {\r\n  FIXED_CONSTANT: {\r\n    CODE: '0001',\r\n    NAME: '固定常量'\r\n  },\r\n  DROPDOWN_SELECT_INPUT: {\r\n    CODE: '0002',\r\n    NAME: '下拉选择'\r\n  },\r\n  CASCADER_SELECT_INPUT: {\r\n    CODE: '0003',\r\n    NAME: '级联选择 '\r\n  },\r\n  COMBINATION_FORMAT_DATA: {\r\n    CODE: '0004',\r\n    NAME: '日期类型'\r\n  },\r\n  AUTO_INCREMENT_SEQUENCE: {\r\n    CODE: '0005',\r\n    NAME: '自增序列'\r\n  },\r\n  BAR_CODE_NAME: {\r\n    CODE: '1001',\r\n    NAME: '条码名称'\r\n  },\r\n}\r\n\r\n/**表单项类型枚举 */\r\nexport const FormItemTypeEnum_ = {\r\n  FORM_ITEM_INPUT: {\r\n    CODE: '0001',\r\n    NAME: '输入框'\r\n  },\r\n  FORM_ITEM_SELECT: {\r\n    CODE: '0002',\r\n    NAME: '下拉选择'\r\n  },\r\n  FORM_ITEM_CASCADER: {\r\n    CODE: '0003',\r\n    NAME: '级联选择'\r\n  },\r\n  FORM_ITEM_AUTO_INCREMENT_SEQUENCE: {\r\n    CODE: '0004',\r\n    NAME: '自增序列'\r\n  },\r\n}\r\n\r\n/*导出类型枚举*/\r\nexport const TemplateEnum_ = {\r\n  //生成模板\r\n  GENERATE_TEMPLATE:{\r\n    CODE:'1',\r\n    DESC:'生成样式模板'\r\n  },\r\n  //导出模板\r\n  EXPORT_TEMPLATE: {\r\n    CODE:'2',\r\n    DESC:'导出样式模板'\r\n  }\r\n}\r\n","//导入lodash的深克隆模块\r\nimport _, { cloneDeep } from 'lodash'\r\n\r\n/**\r\n * 使用lodash实现深拷贝\r\n * @param obj\r\n */\r\nexport const deepClone = (obj) => {\r\n    return _.cloneDeep(obj)\r\n}","<template>\r\n  \r\n  <el-row style=\"padding-left: 20px;padding-right: 20px;padding-top: 20px;\">\r\n    <el-col :span=\"2\">\r\n      <el-button type=\"success\" plain style=\"float: left\" @click=\"handleOpenAddRuleDialog\">新增规则</el-button>\r\n    </el-col>\r\n    <el-col :span=\"5\">\r\n      <el-form-item label=\"请输入规则名称：\">\r\n        <el-input v-model.lazy=\"conditions.ruleName\" style=\"width: 240px\" clearable placeholder=\"请输入规则名称\" />\r\n      </el-form-item>\r\n    </el-col>\r\n  </el-row>\r\n\r\n  <!-- 规则列表开始-->\r\n  <el-row style=\"padding-left: 20px;padding-right: 20px;\">\r\n    <el-table :data=\"ruleList\" style=\"width: 100%;height: 650px;\" :cell-style=\"{ textAlign: 'center' }\"\r\n      :header-cell-style=\"{ textAlign: 'center' }\">\r\n      <el-table-column type=\"index\" />\r\n      <el-table-column prop=\"ruleName\" label=\"规则名称\" />\r\n      <el-table-column prop=\"ruleNumber\" label=\"规则编号\" />\r\n      <el-table-column prop=\"scheme.schemeName\" label=\"所属方案\" />\r\n      <el-table-column prop=\"ruleStatus\" :formatter=\"ruleStatusFormatter\" label=\"规则状态\" />\r\n      <el-table-column prop=\"ruleComments\" label=\"规则备注\" />\r\n      <el-table-column prop=\"createTime\" :formatter=\"dateFormatter\" sortable label=\"创建时间\" />\r\n      <el-table-column prop=\"updateTime\" :formatter=\"dateFormatter\" sortable label=\"更新时间\" />\r\n      <el-table-column fixed=\"right\" label=\"操作\">\r\n        <template v-slot=\"scope\">\r\n          <el-button link type=\"primary\" @click=\"handleOpenEditRuleDialog(scope.row)\">\r\n            编辑\r\n          </el-button>\r\n          <el-button link type=\"primary\" @click.once=\"handleDeleteRuleById(scope.row)\">删除</el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n    <div style=\"margin-top: 10px\">\r\n      <el-pagination v-model:current-page=\"pagingParameters.currentPage\" v-model:page-size=\"pagingParameters.pageSize\"\r\n        :page-sizes=\"[5, 10, 20, 50]\" layout=\"total, sizes, prev, pager, next, jumper\" :total=\"pagingParameters.total\"\r\n        @size-change=\"handlePageSizeChange\" @current-change=\"handleCurrentChange\" />\r\n    </div>\r\n  </el-row>\r\n  <!-- 规则列表结束-->\r\n\r\n  <!-- 新增规则/修改规则弹出层开始 -->\r\n  <el-dialog v-model=\"addOrEditRuleDialogVisible\" :title=\"addOrEditRuleDialogTitle\" width=\"80%\" style=\"height: 700px\"\r\n    :before-close=\"handleCloseDialo\">\r\n    <el-form :model=\"rule\" label-width=\"auto\" :rules=\"rules\" ref=\"ruleFormRef\">\r\n      <el-row>\r\n        <el-col :span=\"11\">\r\n          <el-form-item label=\"规则名称\" prop=\"ruleName\">\r\n            <el-input v-model=\"rule.ruleName\" />\r\n          </el-form-item>\r\n        </el-col>\r\n        <el-col :span=\"2\"></el-col>\r\n        <el-col :span=\"11\">\r\n          <el-form-item label=\"规则编号\" prop=\"ruleNumber\">\r\n            <el-input v-model=\"rule.ruleNumber\" />\r\n          </el-form-item>\r\n        </el-col>\r\n      </el-row>\r\n\r\n      <el-row>\r\n        <el-col :span=\"11\">\r\n          <el-form-item label=\"方案名称\" prop=\"schemeId\">\r\n            <el-select v-model=\"rule.schemeId\" placeholder=\"请选择方案名称\" @change=\"handleSchemeChange\">\r\n              <el-option v-for=\"(schemeOption, index) in schemeOptions\" :key=\"index\" :label=\"schemeOption.label\"\r\n                :value=\"schemeOption.value\" />\r\n            </el-select>\r\n          </el-form-item>\r\n        </el-col>\r\n        <el-col :span=\"2\"></el-col>\r\n        <el-col :span=\"11\">\r\n          <el-form-item label=\"规则状态\" prop=\"ruleStatus\">\r\n            <el-switch v-model=\"rule.ruleStatus\" />\r\n          </el-form-item>\r\n        </el-col>\r\n        <el-col :span=\"24\">\r\n          <el-form-item label=\"规则备注\" prop=\"ruleComments\">\r\n            <el-input v-model=\"rule.ruleComments\" type=\"textarea\" placeholder=\"请输入规则备注\" />\r\n          </el-form-item>\r\n        </el-col>\r\n      </el-row>\r\n\r\n      <el-divider content-position=\"center\" style=\"margin: 10px;\">编辑规则字段信息</el-divider>\r\n      <el-tabs v-model=\"currentEditableTabIndex\" type=\"card\" editable class=\"demo-tabs\" @edit=\"handleTabsEdit\">\r\n        <el-tab-pane v-for=\"editableTab in editableTabs\" :key=\"editableTab.name\" :label=\"editableTab.title\"\r\n          :name=\"editableTab.name\">\r\n          <el-row>\r\n            <el-col :span=\"4\">\r\n              <el-button type=\"primary\" :disabled=\"addRuleFieldButtonIsEnable\" @click=\"handleAddRuleField\">新增规则字段</el-button>\r\n            </el-col>\r\n            <el-col :span=\"8\">\r\n              <el-form :model=\"editableTab\" label-width=\"auto\" :rules=\"editableTabRules\" ref=\"editableTabFormRef\">\r\n                <el-form-item :label=\"editableTab.barCodeNamePlaceholder\" prop=\"barCodeName\">\r\n                  <el-input v-model=\"editableTab.barCodeName\" size=\"small\" />\r\n                </el-form-item>\r\n              </el-form>\r\n            </el-col>\r\n          </el-row>\r\n          <el-row>\r\n            <el-col :span=\"24\">\r\n              <el-table size=\"small\" :data=\"editableTab.ruleFieldListForEachTab\" :style=\"editableTabStyle\"\r\n                :header-row-style=\"{ 'height': '10px', 'line-height': '10px' }\" :cell-style=\"{ textAlign: 'center' }\"\r\n                :header-cell-style=\"{ textAlign: 'center' }\">\r\n                <el-table-column type=\"index\" />\r\n                <el-table-column label=\"字段类型\">\r\n                  <template #default=\"scope\">\r\n                    <el-select v-model=\"scope.row.ruleFieldType\" placeholder=\"请选择字段类型\" size=\"small\"\r\n                      @change=\"handleRuleFieldTypeChange(scope.$index)\">\r\n                      <el-option v-for=\"(ruleFieldTypeSelectOption, index) in ruleFieldTypeSelectOptions\"\r\n                        :key=\"ruleFieldTypeSelectOption.value\" :label=\"ruleFieldTypeSelectOption.label\"\r\n                        :value=\"ruleFieldTypeSelectOption.value\" />\r\n                    </el-select>\r\n                  </template>\r\n                </el-table-column>\r\n                <el-table-column label=\"固定常量\">\r\n                  <template #default=\"scope\">\r\n                    <el-input v-model=\"scope.row.fixedConstant\" size=\"small\"\r\n                      :disabled=\"scope.row.disabledState.fixedConstant\" />\r\n                  </template>\r\n                </el-table-column>\r\n                <!-- <el-table-column label=\"自定算法\">\r\n                  <template #default=\"scope\">\r\n                    <el-select v-model=\"scope.row.dropDownSelectOption\" placeholder=\"请选择\" size=\"small\"\r\n                      :disabled=\"scope.row.disabledState.dropDownSelectOption\">\r\n                      <el-option label=\"随机数算法\" value=\"randomNumber\" />\r\n                      <el-option label=\"自定算法二\" value=\"00000002\" />\r\n                    </el-select>\r\n                  </template>\r\n                </el-table-column> -->\r\n                <el-table-column label=\"级联选择\">\r\n                  <template #default=\"scope\">\r\n                    <el-cascader size=\"small\" style=\"width:100%;\" :options=\"cascaderOptions\"\r\n                      v-model=\"scope.row.cascaderSelectedOptions\" filterable :show-all-levels=\"false\"\r\n                      @change=\"handleCascaderChange(scope.$index)\" placeholder=\"选择或搜索\" clearable\r\n                      :disabled=\"scope.row.disabledState.cascaderSelectedOptions\" auto-width ref=\"cascaderRef\" />\r\n                  </template>\r\n                </el-table-column>\r\n                <el-table-column label=\"日期类型\">\r\n                  <template #default=\"scope\">\r\n                    <el-select v-model=\"scope.row.dateFormatSelectOption\" placeholder=\"请选择日期格式\" size=\"small\"\r\n                      :disabled=\"scope.row.disabledState.dateFormatSelectOption\">\r\n                      <el-option label=\"YYMM\" value=\"YYMM\" />\r\n                      <!-- YY2023中的23， WS Week Sequence 周序列号 -->\r\n                      <el-option label=\"YYWS\" value=\"YYWS\" />\r\n                      <el-option label=\"YYYY-MM-DD\" value=\"YYYY-MM-DD\" />\r\n                      <el-option label=\"YYYY-MM-DD HH:MM:SS\" value=\"YYYY-MM-DD HH:MM:SS\" />\r\n                      <!-- <el-option\r\n                        v-for=\"(dateFormatSelectOption,index) in dateFormatSelectOptions\"\r\n                        :key=\"index\"\r\n                        :label=\"dateFormatSelectOption.label\"\r\n                        :value=\"dateFormatSelectOption.value\"\r\n                        :disabled=\"dateFormatSelectOption.disabled\"\r\n                      /> -->\r\n                    </el-select>\r\n                  </template>\r\n                </el-table-column>\r\n                <el-table-column label=\"自增序列\">\r\n                  <el-table-column label=\"序列进制\">\r\n                    <template #default=\"scope\">\r\n                      <el-radio-group v-model=\"scope.row.autoIncrementSequence.binary\" size=\"small\" is-button\r\n                        :disabled=\"scope.row.disabledState.autoIncrementSequence.binary\">\r\n                        <el-radio-button label=\"10\" value=\"10\" />\r\n                        <el-radio-button label=\"16\" value=\"16\" />\r\n                      </el-radio-group>\r\n                    </template>\r\n                  </el-table-column>\r\n                  <el-table-column label=\"起始序号\">\r\n                    <template #default=\"scope\">\r\n                      <el-input-number size=\"small\" :min=\"1\" controls-position=\"right\" style=\"width:100%\"\r\n                        v-model=\"scope.row.autoIncrementSequence.startSequence\"\r\n                        :disabled=\"scope.row.disabledState.autoIncrementSequence.startSequence\" />\r\n                    </template>\r\n                  </el-table-column>\r\n                  <el-table-column label=\"增长步长\">\r\n                    <template #default=\"scope\">\r\n                      <el-input-number size=\"small\" v-model.number=\"scope.row.autoIncrementSequence.step\" :min=\"0\"\r\n                        controls-position=\"right\" style=\"width:100%\"\r\n                        :disabled=\"scope.row.disabledState.autoIncrementSequence.step\" />\r\n                    </template>\r\n                  </el-table-column>\r\n                </el-table-column>\r\n                <el-table-column label=\"补齐策略\">\r\n                  <el-table-column label=\"启用补齐\">\r\n                    <template #default=\"scope\">\r\n                      <el-switch v-model=\"scope.row.fillStrategy.enable\" size=\"small\"\r\n                        :disabled=\"scope.row.disabledState.fillStrategy.enable\" />\r\n                    </template>\r\n                  </el-table-column>\r\n                  <el-table-column label=\"补齐方向\">\r\n                    <template #default=\"scope\">\r\n                      <el-radio-group v-model=\"scope.row.fillStrategy.direction\" size=\"small\" is-button\r\n                        :disabled=\"scope.row.disabledState.fillStrategy.direction\">\r\n                        <el-radio-button label=\"左\" value=\"l\" />\r\n                        <el-radio-button label=\"右\" value=\"r\" />\r\n                      </el-radio-group>\r\n                    </template>\r\n                  </el-table-column>\r\n                  <el-table-column label=\"补齐长度\">\r\n                    <template #default=\"scope\">\r\n                      <el-input-number size=\"small\" v-model=\"scope.row.fillStrategy.length\" :min=\"0\"\r\n                        controls-position=\"right\" style=\"width:100%\"\r\n                        :disabled=\"scope.row.disabledState.fillStrategy.length\" />\r\n                    </template>\r\n                  </el-table-column>\r\n                  <el-table-column label=\"补齐字符\">\r\n                    <template #default=\"scope\">\r\n                      <el-input v-model=\"scope.row.fillStrategy.character\" size=\"small\"\r\n                        :disabled=\"scope.row.disabledState.fillStrategy.character\" />\r\n                    </template>\r\n                  </el-table-column>\r\n                </el-table-column>\r\n                <el-table-column label=\"重置策略\">\r\n                  <template #default=\"scope\">\r\n                    <el-select v-model=\"scope.row.resetStrategySelectOption\" placeholder=\"请选择自增序列重置策略\" size=\"small\"\r\n                      :disabled=\"scope.row.disabledState.resetStrategySelectOption\">\r\n                      <el-option label=\"每周重置\" value=\"EW\" />\r\n                    </el-select>\r\n                  </template>\r\n                </el-table-column>\r\n                <!--\r\n                <el-table-column label=\"移动位置\">\r\n                  <template v-slot=\"scope\">\r\n                    <el-button link type=\"primary\" @click=\"handleOpenEditProductDrawer(scope.row)\">\r\n                      上\r\n                    </el-button>\r\n                    <el-button link type=\"primary\" @click=\"handleOpenEditProductDrawer(scope.row)\">\r\n                      下\r\n                    </el-button>\r\n                  </template>\r\n                </el-table-column>\r\n                -->\r\n                <el-table-column label=\"操作\">\r\n                  <template v-slot=\"scope\">\r\n                    <el-button link type=\"primary\" @click=\"handleDeleteRuleField(scope.$index)\">删除</el-button>\r\n                  </template>\r\n                </el-table-column>\r\n              </el-table>\r\n            </el-col>\r\n          </el-row>\r\n          <el-row>\r\n            <el-col :span=\"24\">\r\n              <el-form-item>\r\n                <el-button type=\"primary\" v-if=\"currentUpdateType == 'ADD'\" @click=\"handleAddRule\">保存</el-button>\r\n                <el-button type=\"primary\" v-if=\"currentUpdateType == 'UPDATE'\" @click=\"handleUpdateRule\">更新</el-button>\r\n                <el-button>取消</el-button>\r\n              </el-form-item>\r\n            </el-col>\r\n          </el-row>\r\n        </el-tab-pane>\r\n      </el-tabs>\r\n    </el-form>\r\n  </el-dialog>\r\n  <!-- 新增规则/修改规则弹出层结束 -->\r\n</template>\r\n\r\n<script>\r\nimport { watch, reactive, ref, onMounted } from \"vue\";\r\nimport { ElMessage } from \"element-plus\";\r\nimport {\r\n  CaretBottom,\r\n  CaretTop,\r\n} from \"@element-plus/icons-vue\";\r\n\r\nimport { getDictsForTreeBySchemeIdAndLevelForCascader } from '@/api/dict.js'\r\nimport { addRule, getRulesPagination, updateRule, getRulesByRuleNamePagination, deleteRuleById } from '@/api/rule.js'\r\nimport { getSchemesForSelectInput } from '@/api/scheme.js'\r\n\r\nimport { RuleFieldTypeEnum_ } from '@/commons/enum.js'\r\nimport { deepClone } from '@/commons/utils.js'\r\n//格式化日期插件\r\nimport dayjs from 'dayjs';\r\n\r\nexport default {\r\n  name: \"Rule\",\r\n  components: {\r\n    CaretBottom,\r\n    CaretTop,\r\n  },\r\n\r\n  setup() {\r\n    //导入枚举并重命名枚举\r\n    const RuleFieldTypeEnum = RuleFieldTypeEnum_\r\n\r\n    //新增/更新规则Dialog是否开启\r\n    const addOrEditRuleDialogVisible = ref(false);\r\n    //新增/更新规则Dialog标题\r\n    const addOrEditRuleDialogTitle = ref('新增规则');\r\n    const currentUpdateType = ref('UPDATE')\r\n    //新增规则按钮是否可以\r\n    const addRuleFieldButtonIsEnable = ref(true)\r\n\r\n    const editableTabStyle = reactive({\r\n      width: '100%',\r\n      'pointer-events': 'none',\r\n      'height': \"300px\",\r\n      overflow: scroll,\r\n    })\r\n\r\n    //页面上用的所有模板\r\n    const TEMPLATE = {\r\n      //规则实体模板\r\n      RULE_TEMPLATE: {\r\n        ruleName: \"\",\r\n        ruleNumber: \"\",\r\n        schemeId: \"\",\r\n        ruleStatus: true,\r\n        ruleComments: \"\",\r\n        //用于封装所有的规则字段信息\r\n        ruleFieldList: []\r\n      },\r\n      //字段类型对象模板，在这里定义了字段类型对象模板后，其他的地方可以直接引用这个模板(主要是每次新增的时候)\r\n      RULE_FIELD_TEMPLATE: {\r\n        //字段类型\r\n        ruleFieldType: '',\r\n        //固定常量\r\n        fixedConstant: '',\r\n        //下拉选择\r\n        dropDownSelectOption: '',\r\n        //级联选择\r\n        cascaderSelectedOptions: '',\r\n        //日期类型\r\n        dateFormatSelectOption: '',\r\n        //补齐策略\r\n        fillStrategy: {\r\n          //启用补齐\r\n          enable: null,\r\n          //补齐方向\r\n          direction: null,\r\n          //补齐长度\r\n          length: null,\r\n          //补齐字符\r\n          character: null\r\n        },\r\n        //自增序列\r\n        autoIncrementSequence: {\r\n          //进制\r\n          binary: null,\r\n          //步长\r\n          step: null,\r\n          //起始序列\r\n          startSequence: null,\r\n        },\r\n        //重置策略\r\n        resetStrategySelectOption:null,\r\n        //是否可用\r\n        disabledState: {\r\n          fixedConstant: true,\r\n          dropDownSelectOption: true,\r\n          cascaderSelectedOptions: true,\r\n          dateFormatSelectOption: true,\r\n          autoIncrementSequence: {\r\n            binary: true,\r\n            step: true,\r\n            startSequence: true\r\n          },\r\n          resetStrategySelectOption:true,\r\n          fillStrategy: {\r\n            enable: true,\r\n            direction: true,\r\n            length: true,\r\n            character: true\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n\r\n    //保存规则所有相关信息: 规则基本信息 + 规则字段信息\r\n    const rule = reactive(deepClone(TEMPLATE.RULE_TEMPLATE));\r\n\r\n    //规则列表数据\r\n    const ruleList = ref([])\r\n\r\n    //封装分页参数\r\n    const pagingParameters = reactive({\r\n      currentPage: 1,\r\n      pageSize: 10,\r\n      total: 0\r\n    })\r\n\r\n    let tabIndex = ref(1)\r\n    //控制第一次打开tab时，从第几个tab页中开始显示内容，如果不设置，打开后第一个tab标签页中内容为空\r\n    const currentEditableTabIndex = ref(1)\r\n    const editableTabs = ref([\r\n      {\r\n        title: '条码1生成规则',\r\n        name: 1,\r\n        //条码名称表达式\r\n        barCodeNamePlaceholder: `请输入条码1名称`,\r\n        //条码名称\r\n        barCodeName: '',\r\n        //存储每一个tab页中所有的ruleField\r\n        ruleFieldListForEachTab: [deepClone(TEMPLATE.RULE_FIELD_TEMPLATE)]\r\n      }\r\n    ])\r\n\r\n    //级联选择器可选项\r\n    const cascaderOptions = ref([])\r\n    //字段类型下拉框选择器\r\n    const ruleFieldTypeSelectOptions = ref([])\r\n    //日期类型下拉框选择器数据\r\n    const dateFormatSelectOptions = ref([])\r\n\r\n    //方案选择下拉框的Option\r\n    const schemeOptions = ref([])\r\n\r\n    //级联选择器ref\r\n    const cascaderRef = ref(null)\r\n    //表单ref\r\n    const ruleFormRef = ref(null)\r\n\r\n    const conditions = reactive({\r\n      ruleName: ''\r\n    })\r\n\r\n    //定义表单校验规则\r\n    const rules = reactive({\r\n      ruleName: [\r\n        { required: true, message: '请输入规则名称', trigger: 'blur' },\r\n        { min: 1, max: 30, message: '规则名称的长度应该介于1到30之间', trigger: 'blur' },\r\n      ],\r\n      // ruleNumber: [\r\n      //   { required: true, message: '请输入规则编号', trigger: 'blur' },\r\n      //   { min: 1, max: 10, message: '规则编号的长度应该介于1到10之间', trigger: 'blur' },\r\n      // ],\r\n      schemeId: [\r\n        { required: true, message: '请选择方案名称', trigger: 'blur' },\r\n      ],\r\n      ruleStatus: [\r\n        { required: true },\r\n      ],\r\n      //TODO\r\n      // barCodeName: [\r\n      //   { required: true, message: `请输入条码名称`, trigger: 'blur' },\r\n      //   { min: 1, max: 30, message: '条码名称的长度应该介于1到30之间', trigger: 'blur' },\r\n      // ]\r\n    })\r\n\r\n\r\n    /**\r\n     * 刷新方案列表\r\n     */\r\n    const refreshRuleList = async () => {\r\n      const response = await getRulesPagination(pagingParameters)\r\n      if (response.status === 200) {\r\n        //设置列表数据\r\n        ruleList.value = response.data.list\r\n        //设置分页总页数\r\n        pagingParameters.total = response.data.total\r\n      } else {\r\n        ElMessage({\r\n          message: \"查询规则列表失败\",\r\n          type: \"error\",\r\n          plain: true,\r\n        });\r\n      }\r\n    }\r\n\r\n    const refreshSchemeOptions = async () => {\r\n      //每次刷新数据前先清空原来的方案名称用到的options\r\n      schemeOptions.value = []\r\n\r\n      //从数据库查询方案名称下拉框需要用到的数据\r\n      const response = await getSchemesForSelectInput()\r\n      if (response.data.code == '200') {\r\n        //获取到了所有的方案列表\r\n        const schemeList = response.data.data\r\n        //根据全部的方案列表数据封装方案名称下拉框需要用到的数据\r\n        schemeList.forEach(scheme => {\r\n          schemeOptions.value.push({ label: scheme.schemeName, value: scheme.schemeId })\r\n        });\r\n      } else {\r\n        ElMessage({\r\n          message: '查询方案列表失败',\r\n          type: \"error\",\r\n          plain: true,\r\n        });\r\n      }\r\n    }\r\n\r\n    onMounted(async () => {\r\n      //页面打开时刷新规则列表\r\n      refreshRuleList()\r\n      //从枚举中获取数据,封装字段类型下拉框\r\n      Object.keys(RuleFieldTypeEnum).forEach(key => {\r\n        if (RuleFieldTypeEnum[key]['NAME'] != '条码名称' && RuleFieldTypeEnum[key]['NAME'] != '下拉选择') {\r\n          ruleFieldTypeSelectOptions.value.push({ label: RuleFieldTypeEnum[key]['NAME'], value: RuleFieldTypeEnum[key]['CODE'] })\r\n        }\r\n      })\r\n    })\r\n\r\n    /**\r\n     * targetName 当前选中标签的name值\r\n      */\r\n    const handleTabsEdit = (targetName, action) => {\r\n      if (action === 'add') {\r\n        const newTabIndex = editableTabs.value.length + 1\r\n        const editableTab = {\r\n          title: `条码${newTabIndex}生成规则`,\r\n          //条码名称表达式\r\n          barCodeNamePlaceholder: `请输入条码${newTabIndex}名称`,\r\n          //条码名称\r\n          barCodeName: '',\r\n          name: newTabIndex,\r\n          ruleFieldListForEachTab: [deepClone(TEMPLATE.RULE_FIELD_TEMPLATE)]\r\n        }\r\n        editableTabs.value.push(editableTab)\r\n        currentEditableTabIndex.value = newTabIndex\r\n      } else if (action === 'remove') {\r\n        //删除前先删除editableTabs中的数据\r\n        editableTabs.value = editableTabs.value.filter((editableTab) => editableTab.name !== targetName)\r\n        //再根据现有数据进行重新排序\r\n        editableTabs.value.forEach((editableTab, index) => {\r\n          editableTab.title = `条码${index + 1}生成规则`\r\n          //条码名称表达式\r\n          editableTab.barCodeNamePlaceholder = `请输入条码${index + 1}名称`,\r\n            //条码名称\r\n            editableTab.barCodeName = '',\r\n            editableTab.name = index + 1\r\n        })\r\n        //这个值要在targetName和当前标签页总数量中取最小值，不然当只有一个标签页的时候，点击了删除按钮后，tab页中不会展示任何内容\r\n        currentEditableTabIndex.value = Math.min(targetName, editableTabs.value.length)\r\n      }\r\n    }\r\n\r\n    //新增规则字段\r\n    const handleAddRuleField = () => {\r\n      editableTabs.value[currentEditableTabIndex.value - 1].ruleFieldListForEachTab.push(deepClone(TEMPLATE.RULE_FIELD_TEMPLATE));\r\n    };\r\n\r\n    /**\r\n     * 校验条码名称是否符合规范\r\n     * @param {*} rule\r\n     * @param {*} value\r\n     * @param {*} callback\r\n     */\r\n    const validateEdiTableBarCodeName = (rule, value, callback) => {\r\n      const pattern = /[A-Za-z0-9]+/\r\n      if (value.length < 0 || value.length > 30) {\r\n        callback(new Error('条码名称的长度应该介于1到30之间'));\r\n      }\r\n      if (!pattern.test(value)) {\r\n        callback(new Error('条码名称只能由英文和数组组成'));\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n\r\n    const editableTabRules = reactive({\r\n      barCodeName: [\r\n        { required: true, message: '请输入条码名称', trigger: 'blur' },\r\n        { validator: validateEdiTableBarCodeName, trigger: 'blur' },\r\n      ],\r\n    })\r\n\r\n    //表单引用\r\n    const editableTabFormRef = ref(null)\r\n\r\n    //校验表单\r\n    const validateForm = async () => {\r\n      //校验所有的Tab页中的条码名称有没有输入\r\n      const validateResultListAsync = []\r\n      //对editableTabs中barCodeName进行表单校验\r\n      editableTabs.value.forEach((editableTab, index) => {\r\n        const validateResult = editableTabFormRef.value[index].validate((valid) => {\r\n          if (!valid) {\r\n            ElMessage({\r\n              message: `请检查[条码${index + 1}生成规则]中条码名称是否规范`,\r\n              type: \"error\",\r\n              plain: true,\r\n            });\r\n          }\r\n          return valid\r\n        })\r\n        validateResultListAsync.push(validateResult)\r\n      })\r\n      //最终表单校验结果\r\n      let validate = true\r\n      for (let i = 0; i < validateResultListAsync.length; i++) {\r\n        const validateResult = await validateResultListAsync[i]\r\n        validate = validate && validateResult\r\n      }\r\n      // ===> 表单校验不通过直接返回，结束当前操作\r\n      if (!validate) {\r\n        return validate\r\n      }\r\n\r\n      //存放规则字段是否是否选择了具体类型的错误\r\n      const ruleFieldIsSelectedErrorMessages = [];\r\n      //存放规则字段选择了具体类型后是否设置了值\r\n      const ruleFieldSelectedIsSettingValueErrorMessages = [];\r\n\r\n      // ===> 表单校验通过后继续执行后续操作\r\n      //清空rule.ruleFieldList的值\r\n      rule.ruleFieldList = []\r\n\r\n      //拿到了所有tab页中所有类型为级联选择的且选择了值的ruleField，存放在栈中\r\n      const cascaderSelectLabels = []\r\n      cascaderSelectLabels.push(cascaderRef.value.forEach(cascaderRef => {\r\n        if(cascaderRef.getCheckedNodes().length != 0) {\r\n          cascaderSelectLabels.push(cascaderRef.getCheckedNodes()[0].label)\r\n        }\r\n      }))\r\n      //先遍历所有的标签页\r\n      editableTabs.value.forEach((editableTab, editableTabIndex) => {\r\n        //再遍历每一个标签页中所有的ruleField\r\n        editableTab.ruleFieldListForEachTab.forEach((element, ruleFieldIndex) => {\r\n          let ruleField = {}\r\n          //校验输入值的格式为数字组成\r\n          const numberPattern = /[1-9][0-9]*/\r\n          //校验输入值的是否由数字和英文字母组成\r\n          const numberAndEnglishCharaterPattern = /[A-Za-z0-9]/\r\n          switch (element.ruleFieldType) {\r\n            //如果是固定常量\r\n            case RuleFieldTypeEnum.FIXED_CONSTANT.CODE:\r\n              //判断固定常量的值是否为空\r\n              if (element.fixedConstant.trim() == '') {\r\n                const ruleFieldSelectedIsSettingValueErrorMessage = `请检查[条码${editableTabIndex + 1}生成规则]中序号为[${ruleFieldIndex + 1}]的规则字段[${RuleFieldTypeEnum.FIXED_CONSTANT.NAME}]是否设置了具体的值`\r\n                ruleFieldSelectedIsSettingValueErrorMessages.push(ruleFieldSelectedIsSettingValueErrorMessage)\r\n              }\r\n              //当启用了补齐策略时判断固定常量的补齐策略的值是否设置正确\r\n              if (element.fillStrategy.enable) {\r\n                if (!numberPattern.test(element.fillStrategy.length)) {\r\n                  const ruleFieldSelectedIsSettingValueErrorMessage = `请检查[条码${editableTabIndex + 1}生成规则]中序号为[${ruleFieldIndex + 1}]的规则字段[补齐策略-补齐长度]是否设置了正确格式的值，只支持支数字`\r\n                  ruleFieldSelectedIsSettingValueErrorMessages.push(ruleFieldSelectedIsSettingValueErrorMessage)\r\n                }\r\n                if (element.fillStrategy.character.length != 1) {\r\n                  const ruleFieldSelectedIsSettingValueErrorMessage = `请检查[条码${editableTabIndex + 1}生成规则]中序号为[${ruleFieldIndex + 1}]的规则字段[补齐策略-补齐字符]是否设置了正确格式的值，只支持支英文和数字，且长度为1`\r\n                  ruleFieldSelectedIsSettingValueErrorMessages.push(ruleFieldSelectedIsSettingValueErrorMessage)\r\n                }\r\n                if (!numberAndEnglishCharaterPattern.test(element.fillStrategy.character)) {\r\n                  const ruleFieldSelectedIsSettingValueErrorMessage = `请检查[条码${editableTabIndex + 1}生成规则]中序号为[${ruleFieldIndex + 1}]的规则字段[补齐策略-补齐字符]是否设置了正确格式的值，只支持支英文和数字，且长度为1`\r\n                  ruleFieldSelectedIsSettingValueErrorMessages.push(ruleFieldSelectedIsSettingValueErrorMessage)\r\n                }\r\n              }\r\n              ruleField = {\r\n                ruleFieldCategoryCode: RuleFieldTypeEnum.FIXED_CONSTANT.CODE,\r\n                ruleFieldCategoryName: RuleFieldTypeEnum.FIXED_CONSTANT.NAME,\r\n                ruleFieldName: RuleFieldTypeEnum.FIXED_CONSTANT.NAME,\r\n                ruleFieldValue: element.fixedConstant,\r\n                //补齐策略所有子选项信息\r\n                ruleFieldFillStrategy: JSON.stringify(element.fillStrategy),\r\n                //重置策略\r\n                ruleFieldResetStrategy: element.resetStrategySelectOption,\r\n                ruleFieldAssociationTabIndex: editableTabIndex\r\n              }\r\n              break;\r\n            //如果是下拉选择\r\n            case RuleFieldTypeEnum.DROPDOWN_SELECT_INPUT.CODE:\r\n              //判断下拉选择是否进行了选择\r\n              if (element.dropDownSelectOption.trim() == '') {\r\n                const ruleFieldSelectedIsSettingValueErrorMessage = `请检查[条码${editableTabIndex + 1}生成规则]中序号为[${ruleFieldIndex + 1}]的规则字段[${RuleFieldTypeEnum.DROPDOWN_SELECT_INPUT.NAME}]是否选择了具体的值`\r\n                ruleFieldSelectedIsSettingValueErrorMessages.push(ruleFieldSelectedIsSettingValueErrorMessage)\r\n              }\r\n              //当启用了补齐策略时判断下拉选择的补齐策略的值是否设置正确\r\n              if (element.fillStrategy.enable) {\r\n                if (!numberPattern.test(element.fillStrategy.length)) {\r\n                  const ruleFieldSelectedIsSettingValueErrorMessage = `请检查[条码${editableTabIndex + 1}生成规则]中序号为[${ruleFieldIndex + 1}]的规则字段[补齐策略-补齐长度]是否设置了正确格式的值，只支持支数字`\r\n                  ruleFieldSelectedIsSettingValueErrorMessages.push(ruleFieldSelectedIsSettingValueErrorMessage)\r\n                }\r\n                if (element.fillStrategy.character.length != 1) {\r\n                  const ruleFieldSelectedIsSettingValueErrorMessage = `请检查[条码${editableTabIndex + 1}生成规则]中序号为[${ruleFieldIndex + 1}]的规则字段[补齐策略-补齐字符]是否设置了正确格式的值，只支持支英文和数字，且长度为1`\r\n                  ruleFieldSelectedIsSettingValueErrorMessages.push(ruleFieldSelectedIsSettingValueErrorMessage)\r\n                }\r\n                if (!numberAndEnglishCharaterPattern.test(element.fillStrategy.character)) {\r\n                  const ruleFieldSelectedIsSettingValueErrorMessage = `请检查[条码${editableTabIndex + 1}生成规则]中序号为[${ruleFieldIndex + 1}]的规则字段[补齐策略-补齐字符]是否设置了正确格式的值，只支持支英文和数字，且长度为1`\r\n                  ruleFieldSelectedIsSettingValueErrorMessages.push(ruleFieldSelectedIsSettingValueErrorMessage)\r\n                }\r\n              }\r\n              ruleField = {\r\n                ruleFieldCategoryCode: RuleFieldTypeEnum.DROPDOWN_SELECT_INPUT.CODE,\r\n                ruleFieldCategoryName: RuleFieldTypeEnum.DROPDOWN_SELECT_INPUT.NAME,\r\n                ruleFieldName: element.dropDownSelectOption,\r\n                ruleFieldValue: element.dropDownSelectOption,\r\n                //补齐策略所有子选项信息\r\n                ruleFieldFillStrategy: JSON.stringify(element.fillStrategy),\r\n                //重置策略\r\n                ruleFieldResetStrategy: element.resetStrategySelectOption,\r\n                ruleFieldAssociationTabIndex: editableTabIndex\r\n              }\r\n              break;\r\n            //如果是级联选择\r\n            case RuleFieldTypeEnum.CASCADER_SELECT_INPUT.CODE:\r\n              //判断级联选择是否进行了选择\r\n              if (element.cascaderSelectedOptions.length == 0) {\r\n                const ruleFieldSelectedIsSettingValueErrorMessage = `请检查[条码${editableTabIndex + 1}生成规则]中序号为[${ruleFieldIndex + 1}]的规则字段[${RuleFieldTypeEnum.CASCADER_SELECT_INPUT.NAME}]是否选择了具体的值`\r\n                ruleFieldSelectedIsSettingValueErrorMessages.push(ruleFieldSelectedIsSettingValueErrorMessage)\r\n                break;\r\n              }\r\n              //当启用了补齐策略时判断级联选择的补齐策略的值是否设置正确\r\n              if (element.fillStrategy.enable) {\r\n                if (!numberPattern.test(element.fillStrategy.length)) {\r\n                  const ruleFieldSelectedIsSettingValueErrorMessage = `请检查[条码${editableTabIndex + 1}生成规则]中序号为[${ruleFieldIndex + 1}]的规则字段[补齐策略-补齐长度]是否设置了正确格式的值，只支持支数字`\r\n                  ruleFieldSelectedIsSettingValueErrorMessages.push(ruleFieldSelectedIsSettingValueErrorMessage)\r\n                }\r\n                if (element.fillStrategy.character.length != 1) {\r\n                  const ruleFieldSelectedIsSettingValueErrorMessage = `请检查[条码${editableTabIndex + 1}生成规则]中序号为[${ruleFieldIndex + 1}]的规则字段[补齐策略-补齐字符]是否设置了正确格式的值，只支持支英文和数字，且长度为1`\r\n                  ruleFieldSelectedIsSettingValueErrorMessages.push(ruleFieldSelectedIsSettingValueErrorMessage)\r\n                }\r\n                if (!numberAndEnglishCharaterPattern.test(element.fillStrategy.character)) {\r\n                  const ruleFieldSelectedIsSettingValueErrorMessage = `请检查[条码${editableTabIndex + 1}生成规则]中序号为[${ruleFieldIndex + 1}]的规则字段[补齐策略-补齐字符]是否设置了正确格式的值，只支持支英文和数字，且长度为1`\r\n                  ruleFieldSelectedIsSettingValueErrorMessages.push(ruleFieldSelectedIsSettingValueErrorMessage)\r\n                }\r\n                break;\r\n              }\r\n              const ruleFieldValue = {\r\n                cascaderOptionValue: element.cascaderSelectedOptions,\r\n                cascaderOptionLabel: cascaderSelectLabels.shift()\r\n              }\r\n              ruleField = {\r\n                ruleFieldCategoryCode: RuleFieldTypeEnum.CASCADER_SELECT_INPUT.CODE,\r\n                ruleFieldCategoryName: RuleFieldTypeEnum.CASCADER_SELECT_INPUT.NAME,\r\n                ruleFieldName: ruleFieldValue.cascaderOptionLabel,\r\n                ruleFieldValue: JSON.stringify(ruleFieldValue),\r\n                //补齐策略所有子选项信息\r\n                ruleFieldFillStrategy: JSON.stringify(element.fillStrategy),\r\n                //重置策略\r\n                ruleFieldResetStrategy: element.resetStrategySelectOption,\r\n                ruleFieldAssociationTabIndex: editableTabIndex\r\n              }\r\n              break;\r\n            //如果是日期类型\r\n            case RuleFieldTypeEnum.COMBINATION_FORMAT_DATA.CODE:\r\n              //判断日期类型是否进行了选择\r\n              if (element.dateFormatSelectOption.trim() == '') {\r\n                const ruleFieldSelectedIsSettingValueErrorMessage = `请检查[条码${editableTabIndex + 1}生成规则]中序号为[${ruleFieldIndex + 1}]的规则字段[${RuleFieldTypeEnum.COMBINATION_FORMAT_DATA.NAME}]是否选择了具体的值`\r\n                ruleFieldSelectedIsSettingValueErrorMessages.push(ruleFieldSelectedIsSettingValueErrorMessage)\r\n              }\r\n              //当启用了补齐策略时判断日期类型的补齐策略的值是否设置正确\r\n              if (element.fillStrategy.enable) {\r\n                if (!numberPattern.test(element.fillStrategy.length)) {\r\n                  const ruleFieldSelectedIsSettingValueErrorMessage = `请检查[条码${editableTabIndex + 1}生成规则]中序号为[${ruleFieldIndex + 1}]的规则字段[补齐策略-补齐长度]是否设置了正确格式的值，只支持支数字`\r\n                  ruleFieldSelectedIsSettingValueErrorMessages.push(ruleFieldSelectedIsSettingValueErrorMessage)\r\n                }\r\n                if (element.fillStrategy.character.length != 1) {\r\n                  const ruleFieldSelectedIsSettingValueErrorMessage = `请检查[条码${editableTabIndex + 1}生成规则]中序号为[${ruleFieldIndex + 1}]的规则字段[补齐策略-补齐字符]是否设置了正确格式的值，只支持支英文和数字，且长度为1`\r\n                  ruleFieldSelectedIsSettingValueErrorMessages.push(ruleFieldSelectedIsSettingValueErrorMessage)\r\n                }\r\n                if (!numberAndEnglishCharaterPattern.test(element.fillStrategy.character)) {\r\n                  const ruleFieldSelectedIsSettingValueErrorMessage = `请检查[条码${editableTabIndex + 1}生成规则]中序号为[${ruleFieldIndex + 1}]的规则字段[补齐策略-补齐字符]是否设置了正确格式的值，只支持支英文和数字，且长度为1`\r\n                  ruleFieldSelectedIsSettingValueErrorMessages.push(ruleFieldSelectedIsSettingValueErrorMessage)\r\n                }\r\n              }\r\n              ruleField = {\r\n                ruleFieldCategoryCode: RuleFieldTypeEnum.COMBINATION_FORMAT_DATA.CODE,\r\n                ruleFieldCategoryName: RuleFieldTypeEnum.COMBINATION_FORMAT_DATA.NAME,\r\n                ruleFieldName: '日期类型',\r\n                ruleFieldValue: element.dateFormatSelectOption,\r\n                //补齐策略所有子选项信息\r\n                ruleFieldFillStrategy: JSON.stringify(element.fillStrategy),\r\n                //重置策略\r\n                ruleFieldResetStrategy: element.resetStrategySelectOption,\r\n                ruleFieldAssociationTabIndex: editableTabIndex\r\n              }\r\n              break;\r\n            //如果是自增序列\r\n            case RuleFieldTypeEnum.AUTO_INCREMENT_SEQUENCE.CODE:\r\n              //判断自增序列是否设置值且格式是否正确的值\r\n              if (!numberPattern.test(element.autoIncrementSequence.startSequence) || !numberPattern.test(element.autoIncrementSequence.step)) {\r\n                const ruleFieldSelectedIsSettingValueErrorMessage = `请检查[条码${editableTabIndex + 1}生成规则]中序号为[${ruleFieldIndex + 1}]的规则字段[${RuleFieldTypeEnum.AUTO_INCREMENT_SEQUENCE.NAME}-起始序号/增长步长]是否设置了正确格式的值，只支持数字`\r\n                ruleFieldSelectedIsSettingValueErrorMessages.push(ruleFieldSelectedIsSettingValueErrorMessage)\r\n              }\r\n\r\n              //当启用了补齐策略时判断自增序列的补齐策略的值是否设置正确\r\n              if (element.fillStrategy.enable) {\r\n                if (!numberPattern.test(element.fillStrategy.length)) {\r\n                  const ruleFieldSelectedIsSettingValueErrorMessage = `请检查[条码${editableTabIndex + 1}生成规则]中序号为[${ruleFieldIndex + 1}]的规则字段[补齐策略-补齐长度]是否设置了正确格式的值，只支持支数字`\r\n                  ruleFieldSelectedIsSettingValueErrorMessages.push(ruleFieldSelectedIsSettingValueErrorMessage)\r\n                }\r\n                if (element.fillStrategy.character.length != 1) {\r\n                  const ruleFieldSelectedIsSettingValueErrorMessage = `请检查[条码${editableTabIndex + 1}生成规则]中序号为[${ruleFieldIndex + 1}]的规则字段[补齐策略-补齐字符]是否设置了正确格式的值，只支持支英文和数字，且长度为1`\r\n                  ruleFieldSelectedIsSettingValueErrorMessages.push(ruleFieldSelectedIsSettingValueErrorMessage)\r\n                }\r\n                if (!numberAndEnglishCharaterPattern.test(element.fillStrategy.character)) {\r\n                  const ruleFieldSelectedIsSettingValueErrorMessage = `请检查[条码${editableTabIndex + 1}生成规则]中序号为[${ruleFieldIndex + 1}]的规则字段[补齐策略-补齐字符]是否设置了正确格式的值，只支持支英文和数字，且长度为1`\r\n                  ruleFieldSelectedIsSettingValueErrorMessages.push(ruleFieldSelectedIsSettingValueErrorMessage)\r\n                }\r\n              }\r\n              ruleField = {\r\n                ruleFieldCategoryCode: RuleFieldTypeEnum.AUTO_INCREMENT_SEQUENCE.CODE,\r\n                ruleFieldCategoryName: RuleFieldTypeEnum.AUTO_INCREMENT_SEQUENCE.NAME,\r\n                ruleFieldName: '进制',\r\n                //autoIncrementSequence所有子选项的信息\r\n                ruleFieldValue: JSON.stringify(element.autoIncrementSequence),\r\n                //补齐策略所有子选项信息\r\n                ruleFieldFillStrategy: JSON.stringify(element.fillStrategy),\r\n                //重置策略\r\n                ruleFieldResetStrategy: element.resetStrategySelectOption,\r\n                ruleFieldAssociationTabIndex: editableTabIndex\r\n              }\r\n              break;\r\n            default:\r\n              //当用户只新增了规则字段，但是没有给这个规则字段设置具体的信息，程序就会走到这里\r\n              ruleFieldIsSelectedErrorMessages.push({ editableTabIndex: editableTabIndex, fileTypeIndex: ruleFieldIndex })\r\n              break;\r\n          }\r\n          //设置逻辑删除状态\r\n          rule.ruleFieldList.push(ruleField)\r\n        })\r\n\r\n        //获取当前条码的名称,并封装到一个ruleField中\r\n        const ruleFieldStoreTableName = {\r\n          ruleFieldCategoryCode: RuleFieldTypeEnum.BAR_CODE_NAME.CODE,\r\n          ruleFieldCategoryName: '-----',\r\n          ruleFieldName: '规则名称',\r\n          ruleFieldValue: editableTab.barCodeName,\r\n          //补齐策略所有子选项信息\r\n          ruleFieldFillStrategy: '-----',\r\n          ruleFieldAssociationTabIndex: editableTabIndex\r\n        }\r\n        //把存储当前tab编辑的规则名称的ruleField放入ruleFieldList中\r\n        rule.ruleFieldList.push(ruleFieldStoreTableName)\r\n      })\r\n\r\n      //校验所有tab页中的规则字段是否都进行选择了，有时会出现新增了规则字段，但是这个字段什么信息都没有\r\n      if (ruleFieldIsSelectedErrorMessages.length > 0) {\r\n        for (let i = 0; i < ruleFieldIsSelectedErrorMessages.length; i++) {\r\n          ElMessage({\r\n            message: `请检查[条码${ruleFieldIsSelectedErrorMessages[i].editableTabIndex + 1}生成规则]中序号为[${ruleFieldIsSelectedErrorMessages[i].fileTypeIndex + 1}]的字段类型选项是否选择了具体的类型`,\r\n            type: \"error\",\r\n            plain: true,\r\n          });\r\n          return false\r\n        }\r\n        return false\r\n      }\r\n\r\n      //校验所有tab页中的规则字段选择后是否设置具体值了，有时会出现选择了规则字段类型，但是没有设置的值\r\n      if (ruleFieldSelectedIsSettingValueErrorMessages.length > 0) {\r\n        for (let i = 0; i < ruleFieldSelectedIsSettingValueErrorMessages.length; i++) {\r\n          ElMessage({\r\n            message: `${ruleFieldSelectedIsSettingValueErrorMessages[i]}`,\r\n            type: \"error\",\r\n            plain: true,\r\n          });\r\n          return false\r\n        }\r\n        return false\r\n      }\r\n      return true\r\n    }\r\n\r\n    //保存规则\r\n    const handleAddRule = async () => {\r\n      const validateResult = await validateForm()\r\n      //如果表单校验不通过，直接返回，阻止程序继续向下执行\r\n      if (!validateResult) {\r\n        return\r\n      }\r\n      try {\r\n        //表单校验不通过不允许提交\r\n        ruleFormRef.value.validate(async (valid) => {\r\n          //TODO\r\n          if (valid) {\r\n            //保存规则\r\n            const response = await addRule(rule)\r\n            if (response.data.code === '200') {\r\n              //提示保存成功\r\n              ElMessage({\r\n                message: \"保存规则成功\",\r\n                type: \"success\",\r\n                plain: true,\r\n              });\r\n              //关闭Dialog\r\n              addOrEditRuleDialogVisible.value = false\r\n              //清除方案实体中的缓存数据\r\n              const rule_ = deepClone(TEMPLATE.RULE_TEMPLATE)\r\n              Object.keys(rule_).forEach(key => {\r\n                rule[key] = rule_[key]\r\n              });\r\n              //刷新方案列表\r\n              refreshRuleList()\r\n            } else {\r\n              ElMessage({\r\n                message: \"保存规则失败\",\r\n                type: \"error\",\r\n                plain: true,\r\n              });\r\n            }\r\n          }\r\n        })\r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    };\r\n\r\n\r\n    //更新规则\r\n    const handleUpdateRule = async () => {\r\n      const validateResult = await validateForm()\r\n      //如果表单校验不通过，直接返回，阻止程序继续向下执行\r\n      if (!validateResult) {\r\n        return\r\n      }\r\n      try {\r\n        //表单校验不通过不允许提交\r\n        ruleFormRef.value.validate(async (valid) => {\r\n          //TODO\r\n          if (valid) {\r\n            //保存规则\r\n            const response = await updateRule(rule)\r\n            if (response.data.code === '200') {\r\n              //提示保存成功\r\n              ElMessage({\r\n                message: \"更新规则成功\",\r\n                type: \"success\",\r\n                plain: true,\r\n              });\r\n              //关闭Dialog\r\n              addOrEditRuleDialogVisible.value = false\r\n              //清除方案实体中的缓存数据\r\n              const rule_ = deepClone(TEMPLATE.RULE_TEMPLATE)\r\n              Object.keys(rule_).forEach(key => {\r\n                rule[key] = rule_[key]\r\n              });\r\n              //刷新方案列表\r\n              refreshRuleList()\r\n            } else {\r\n              ElMessage({\r\n                message: \"更新规则失败\",\r\n                type: \"error\",\r\n                plain: true,\r\n              });\r\n            }\r\n          }\r\n        })\r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    };\r\n\r\n\r\n    //监听所有editableTabs中每一个editableTab中的 ruleFieldListForEachTab 数组中的每一个元素发生的变化\r\n    watch(() => editableTabs.value[currentEditableTabIndex.value - 1].ruleFieldListForEachTab, (newVal, oldVal) => {\r\n      newVal.forEach(ruleField => {\r\n        //如果启用了补齐策略，则 补齐方向、补齐长度、补齐字符 的状态变为可编辑状态\r\n        const fillStrategyIsEnable = ruleField.fillStrategy.enable\r\n        //使 补齐方向 的可编辑状态和补齐启用状态保持统一\r\n        ruleField.disabledState.fillStrategy.direction = !fillStrategyIsEnable\r\n        //使 补齐长度 的可编辑状态和补齐启用状态保持统一\r\n        ruleField.disabledState.fillStrategy.length = !fillStrategyIsEnable\r\n        //使 补齐字符 的可编辑状态和补齐启用状态保持统一\r\n        ruleField.disabledState.fillStrategy.character = !fillStrategyIsEnable\r\n        //如果启用了补齐策略，则给 补齐方向、补齐长度、补齐字符设置初始值\r\n        if (fillStrategyIsEnable) {\r\n          //说明用户修改了 补齐方向、补齐长度、补齐字符 三个子选项中的一个值\r\n          if (ruleField.fillStrategy.direction == null) {\r\n            //设置 补齐方向 初始值\r\n            ruleField.fillStrategy.direction = 'l'\r\n          }\r\n          if (ruleField.fillStrategy.length == null) {\r\n            //设置 补齐长度 初始值\r\n            ruleField.fillStrategy.length = 10\r\n          }\r\n          if (ruleField.fillStrategy.character == null) {\r\n            //设置 补齐字符 初始值\r\n            ruleField.fillStrategy.character = '0'\r\n          }\r\n        } else {\r\n          //设置 补齐方向 初始值\r\n          ruleField.fillStrategy.direction = null\r\n          //设置 补齐长度 初始值\r\n          ruleField.fillStrategy.length = null\r\n          //设置 补齐字符 初始值\r\n          ruleField.fillStrategy.character = null\r\n        }\r\n      })\r\n    }, { deep: true });\r\n\r\n    //级联选择器中选中的数据发生变化时触发\r\n    const handleCascaderChange = ($index) => {\r\n      // let index = 0;\r\n      // for (let i = 0; i < currentEditableTabIndex.value - 1; i++) {\r\n      //   index += editableTabs.value[i].ruleFieldListForEachTab.length\r\n      // }\r\n      // index += $index\r\n      // editableTabs.value[currentEditableTabIndex.value - 1].ruleFieldListForEachTab[$index].cascaderSelectedLabel = cascaderRef.value[index].getCheckedNodes()[0].label\r\n    };\r\n\r\n    //关闭弹窗\r\n    const handleCloseDialo = () => {\r\n      //关闭弹窗时情况ruleFieldListForEachTab中数据\r\n      //特别注意:要使用vue3能够监控到数据变化的方法去清空数组，不能直接使用 ruleFieldListForEachTab = []\r\n      //清空数组所有元素\r\n      //ruleFieldListForEachTab.value = ruleFieldListForEachTab.value.slice(0,0)\r\n      //给数组中放置一个元素\r\n      const ruleField = {}\r\n      ruleField.disabledState = {}\r\n      //ruleFieldListForEachTab.value.push(ruleField)\r\n\r\n      //关闭弹窗\r\n      addOrEditRuleDialogVisible.value = false;\r\n    }\r\n\r\n    //刷新级联选择用到的options\r\n    const refreshCascaderOptions = async () => {\r\n      //从数据库中查询级联选择使用到的选项数据\r\n      //level等于2，代表查询树结构的最上面两层数据\r\n      const getDictsForTreeBySchemeIdAndLevelForCascaderResponse = await getDictsForTreeBySchemeIdAndLevelForCascader({ schemeId: rule.schemeId, level: 2 })\r\n      if (getDictsForTreeBySchemeIdAndLevelForCascaderResponse.data.code == '200') {\r\n        const cascaderOptionsJSON = getDictsForTreeBySchemeIdAndLevelForCascaderResponse.data.data\r\n        if(cascaderOptionsJSON.children != undefined) {\r\n          cascaderOptions.value = cascaderOptionsJSON.children\r\n        }\r\n      } else {\r\n        ElMessage({\r\n          message: '查询下拉选择选项列表失败',\r\n          type: \"error\",\r\n          plain: true,\r\n        });\r\n      }\r\n    }\r\n\r\n    /**\r\n     * 规则字段类型下拉框改变\r\n     */\r\n    const handleRuleFieldTypeChange = (index) => {\r\n      //找到具体操作的那个RuleField，并修改其数据\r\n      const ruleField = editableTabs.value[currentEditableTabIndex.value - 1].ruleFieldListForEachTab[index]\r\n      let currentRuleField = null\r\n      switch (ruleField.ruleFieldType) {\r\n        //固定常量\r\n        case RuleFieldTypeEnum.FIXED_CONSTANT.CODE:\r\n          //先通过克隆创建一个ruleField对象\r\n          currentRuleField = deepClone(TEMPLATE.RULE_FIELD_TEMPLATE)\r\n          //把ruleField.ruleFieldType赋值给currentRuleField.ruleFieldType\r\n          currentRuleField.ruleFieldType = ruleField.ruleFieldType\r\n          //解除fixedConstant的禁用状态\r\n          currentRuleField.disabledState.fixedConstant = false\r\n          //禁止使用补齐策略[目前设置为只有自增序列才可以使用补齐策略和重置策略这两个选项]\r\n          currentRuleField.disabledState.fillStrategy.enable = true\r\n          //禁止使用重置策略[目前设置为只有自增序列才可以使用补齐策略和重置策略这两个选项]\r\n          currentRuleField.disabledState.resetStrategySelectOption = true\r\n          //保持补齐策略赋值前后一致\r\n          //因为ruleField是一个Proxy对象，不能直接赋值，可以通过下面方式进行复制\r\n          Object.keys(ruleField).forEach(key => {\r\n            ruleField[key] = currentRuleField[key]\r\n          })\r\n          break;\r\n        //下拉选择\r\n        case RuleFieldTypeEnum.DROPDOWN_SELECT_INPUT.CODE:\r\n          //先通过克隆创建一个ruleField对象\r\n          currentRuleField = deepClone(TEMPLATE.RULE_FIELD_TEMPLATE)\r\n          //把ruleField.ruleFieldType赋值给currentRuleField.ruleFieldType\r\n          currentRuleField.ruleFieldType = ruleField.ruleFieldType\r\n          //解除dropDownSelectOption的禁用状态\r\n          currentRuleField.disabledState.dropDownSelectOption = false\r\n          //禁止使用补齐策略[目前设置为只有自增序列才可以使用补齐策略和重置策略这两个选项]\r\n          currentRuleField.disabledState.fillStrategy.enable = true\r\n          //禁止使用重置策略[目前设置为只有自增序列才可以使用补齐策略和重置策略这两个选项]\r\n          currentRuleField.disabledState.resetStrategySelectOption = true\r\n          //保持补齐策略赋值前后一致\r\n          //因为ruleField是一个Proxy对象，不能直接赋值，可以通过下面方式进行复制\r\n          Object.keys(ruleField).forEach(key => {\r\n            ruleField[key] = currentRuleField[key]\r\n          })\r\n          break;\r\n        //级联选择\r\n        case RuleFieldTypeEnum.CASCADER_SELECT_INPUT.CODE:\r\n          //先通过克隆创建一个ruleField对象\r\n          currentRuleField = deepClone(TEMPLATE.RULE_FIELD_TEMPLATE)\r\n          //把ruleField.ruleFieldType赋值给currentRuleField.ruleFieldType\r\n          currentRuleField.ruleFieldType = ruleField.ruleFieldType\r\n          //解除cascaderSelectedOptions的禁用状态\r\n          currentRuleField.disabledState.cascaderSelectedOptions = false\r\n          //禁止使用补齐策略[目前设置为只有自增序列才可以使用补齐策略和重置策略这两个选项]\r\n          currentRuleField.disabledState.fillStrategy.enable = true\r\n          //禁止使用重置策略[目前设置为只有自增序列才可以使用补齐策略和重置策略这两个选项]\r\n          currentRuleField.disabledState.resetStrategySelectOption = true\r\n          //因为ruleField是一个Proxy对象，不能直接赋值，可以通过下面方式进行复制\r\n          Object.keys(ruleField).forEach(key => {\r\n            ruleField[key] = currentRuleField[key]\r\n          })\r\n          break;\r\n        //日期类型\r\n        case RuleFieldTypeEnum.COMBINATION_FORMAT_DATA.CODE: {\r\n          //先通过克隆创建一个ruleField对象\r\n          currentRuleField = deepClone(TEMPLATE.RULE_FIELD_TEMPLATE)\r\n          //把ruleField.ruleFieldType赋值给currentRuleField.ruleFieldType\r\n          currentRuleField.ruleFieldType = ruleField.ruleFieldType\r\n          //解除dateSelectedOption的禁用状态\r\n          currentRuleField.disabledState.dateFormatSelectOption = false\r\n          //禁止使用补齐策略[目前设置为只有自增序列才可以使用补齐策略和重置策略这两个选项]\r\n          currentRuleField.disabledState.fillStrategy.enable = true\r\n          //禁止使用重置策略[目前设置为只有自增序列才可以使用补齐策略和重置策略这两个选项]\r\n          currentRuleField.disabledState.resetStrategySelectOption = true\r\n          //因为ruleField是一个Proxy对象，不能直接赋值，可以通过下面方式进行复制\r\n          Object.keys(ruleField).forEach(key => {\r\n            ruleField[key] = currentRuleField[key]\r\n          })\r\n          break;\r\n        }\r\n        //自增序列\r\n        case RuleFieldTypeEnum.AUTO_INCREMENT_SEQUENCE.CODE:\r\n          //先通过克隆创建一个ruleField对象\r\n          currentRuleField = deepClone(TEMPLATE.RULE_FIELD_TEMPLATE)\r\n          //把ruleField.ruleFieldType赋值给currentRuleField.ruleFieldType\r\n          currentRuleField.ruleFieldType = ruleField.ruleFieldType\r\n          //解除autoIncrementSequence中所有子选项的禁用状态\r\n          //序列进制\r\n          currentRuleField.disabledState.autoIncrementSequence.binary = false\r\n          //增长步长\r\n          currentRuleField.disabledState.autoIncrementSequence.step = false\r\n          //起始序号\r\n          currentRuleField.disabledState.autoIncrementSequence.startSequence = false\r\n          //解除启用补齐的禁用状态、\r\n          currentRuleField.disabledState.fillStrategy.enable = false\r\n          //解除充值策略的禁用状态\r\n          currentRuleField.disabledState.resetStrategySelectOption = false\r\n          //给autoIncrementSequence中所有子选项赋值\r\n          //序列进制\r\n          currentRuleField.autoIncrementSequence.binary = '10'\r\n          //增长步长\r\n          currentRuleField.autoIncrementSequence.step = 1\r\n          //起始序号\r\n          currentRuleField.autoIncrementSequence.startSequence = 1\r\n          //因为ruleField是一个Proxy对象，不能直接赋值，可以通过下面方式进行复制\r\n          Object.keys(ruleField).forEach(key => {\r\n            //如果字段类型是自增序列，则进行特殊处理，因为自增序列是一个对象\r\n            if (key === 'autoIncrementSequence') {\r\n              //处理子选项是否可以被选中\r\n              ruleField.disabledState.autoIncrementSequence = currentRuleField.disabledState.autoIncrementSequence\r\n              //处理子选项的初始值\r\n              ruleField.autoIncrementSequence = currentRuleField.autoIncrementSequence\r\n            } else {\r\n              ruleField[key] = currentRuleField[key]\r\n            }\r\n          })\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n\r\n    /**\r\n     * 删除规则字段\r\n     */\r\n    const handleDeleteRuleField = (index) => {\r\n      editableTabs.value[currentEditableTabIndex.value - 1].ruleFieldListForEachTab.splice(index, 1)\r\n    }\r\n\r\n    //调整pageSize大小\r\n    const handlePageSizeChange = async () => {\r\n      refreshRuleList()\r\n    }\r\n    //调整currentChange大小\r\n    const handleCurrentChange = async () => {\r\n      refreshRuleList()\r\n    }\r\n\r\n    //打开新增规则Dialog\r\n    const handleOpenAddRuleDialog = () => {\r\n      //刷新方案列表下拉所用到的Options\r\n      refreshSchemeOptions()\r\n      //修改Dialog显示状态\r\n      addOrEditRuleDialogVisible.value = true\r\n      //修改Dialog标题\r\n      addOrEditRuleDialogTitle.value = '新增规则'\r\n      //修改当前操作类型\r\n      currentUpdateType.value = 'ADD'\r\n    }\r\n\r\n    //打开编辑规则Dialog\r\n    const handleOpenEditRuleDialog = async (row) => {\r\n      //刷新方案列表下拉所用到的Options\r\n      refreshSchemeOptions()\r\n      //修改Dialog显示状态\r\n      addOrEditRuleDialogVisible.value = true\r\n      //修改Dialog名称\r\n      addOrEditRuleDialogTitle.value = '编辑规则'\r\n      //修改当前操作类型\r\n      currentUpdateType.value = 'UPDATE'\r\n\r\n      //回填数据到rule对象中\r\n      rule.id = row.id\r\n      rule.ruleName = row.ruleName\r\n      rule.ruleNumber = row.ruleNumber\r\n      //先设置schemeId，下面的步骤会用到\r\n      rule.schemeId = row.schemeId\r\n      rule.ruleStatus = row.ruleStatus == \"0\" ? true : false\r\n      rule.ruleComments = row.ruleComments\r\n      rule.ruleId = row.ruleId\r\n      rule.createTime = row.createTime\r\n      rule.updateTime = row.updateTime\r\n\r\n      //根据选中的方案刷新级联选择用到的Options\r\n      refreshCascaderOptions()\r\n\r\n      //拼接出来editableTabs结构前先清空前一次的拼接结果\r\n      editableTabs.value = []\r\n      //根据ruleFieldList数据，封装ediTabs对象,这样ediTabs可以自动回显\r\n      //获取editableTab的数量\r\n      const editableTabNums = row.ruleFieldList[row.ruleFieldList.length - 1].ruleFieldAssociationTabIndex + 1\r\n      for(let i=0;i<editableTabNums;i++) {\r\n        editableTabs.value.push(\r\n          {\r\n            title: '条码1生成规则',\r\n            name: 1,\r\n            //条码名称表达式\r\n            barCodeNamePlaceholder: `请输入条码1名称`,\r\n            //条码名称\r\n            barCodeName: '',\r\n            //存储每一个tab页中所有的ruleField\r\n            ruleFieldListForEachTab: [deepClone(TEMPLATE.RULE_FIELD_TEMPLATE)]\r\n          }\r\n        )\r\n      }\r\n\r\n      for (let editableTabIndex = 0; editableTabIndex < editableTabNums; editableTabIndex++) {\r\n        //设置editableTab的title值\r\n        editableTabs.value[editableTabIndex].title = `条码${editableTabIndex + 1}生成规则`\r\n        //设置editableTab的name值\r\n        editableTabs.value[editableTabIndex].name = editableTabIndex + 1\r\n        //设置editableTab的barCodeNamePlaceholder值\r\n        editableTabs.value[editableTabIndex].barCodeNamePlaceholder = `请输入条码${editableTabIndex + 1}名称`\r\n        //设置editableTab的barCodeName值\r\n        editableTabs.value[editableTabIndex].barCodeName =\r\n          row.ruleFieldList.filter(ruleField => {\r\n            return ruleField.ruleFieldAssociationTabIndex == editableTabIndex && ruleField.ruleFieldCategoryCode == RuleFieldTypeEnum.BAR_CODE_NAME.CODE\r\n          })[0].ruleFieldValue\r\n        //设置editableTab的ruleFieldListForEachTab的值\r\n        row.ruleFieldList.filter(ruleField => {\r\n          return ruleField.ruleFieldAssociationTabIndex == editableTabIndex && ruleField.ruleFieldCategoryCode != RuleFieldTypeEnum.BAR_CODE_NAME.CODE\r\n        }).forEach((ruleField, index) => {\r\n          const ruleFied_ = deepClone(TEMPLATE.RULE_FIELD_TEMPLATE)\r\n          //设置每一个元素的ruleFieldType\r\n          ruleFied_.ruleFieldType = ruleField.ruleFieldCategoryCode\r\n          //设置每一个元素的fillStrategy\r\n          ruleFied_.fillStrategy = JSON.parse(ruleField.ruleFieldFillStrategy)\r\n          //设置每一个元素的fillStrategy.enable的disabledState\r\n          ruleFied_.disabledState.fillStrategy.enable = false\r\n          switch (ruleField.ruleFieldCategoryCode) {\r\n            //固定常量\r\n            case RuleFieldTypeEnum.FIXED_CONSTANT.CODE: {\r\n              //设置固定常量的值\r\n              ruleFied_.fixedConstant = ruleField.ruleFieldValue\r\n              //设置固定常量的disabledState\r\n              ruleFied_.disabledState.fixedConstant = false\r\n              break;\r\n            }\r\n            //下拉选择\r\n            case RuleFieldTypeEnum.DROPDOWN_SELECT_INPUT.CODE: {\r\n              //设置下拉选择选中的值\r\n              ruleFied_.dropDownSelectOption = ruleField.ruleFieldValue\r\n              //设置下拉选择的disabledState\r\n              ruleFied_.disabledState.dropDownSelectOption = false\r\n              break;\r\n            }\r\n            //级联选择\r\n            case RuleFieldTypeEnum.CASCADER_SELECT_INPUT.CODE: {\r\n              //设置级联选的选中的值\r\n              ruleFied_.cascaderSelectedOptions = JSON.parse(ruleField.ruleFieldValue).cascaderOptionValue\r\n              //设置下拉选择的disabledState\r\n              ruleFied_.disabledState.cascaderSelectedOptions = false\r\n              break;\r\n            }\r\n            //日期类型\r\n            case RuleFieldTypeEnum.COMBINATION_FORMAT_DATA.CODE: {\r\n              //设置日期类型选中的日期格式\r\n              ruleFied_.dateFormatSelectOption = ruleField.ruleFieldValue\r\n              //设置下拉选择的disabledState\r\n              ruleFied_.disabledState.dateFormatSelectOption = false\r\n              break;\r\n            }\r\n            //自增序列\r\n            case RuleFieldTypeEnum.AUTO_INCREMENT_SEQUENCE.CODE: {\r\n              //设置自增序列的值\r\n              ruleFied_.autoIncrementSequence = JSON.parse(ruleField.ruleFieldValue)\r\n              //设置下拉选择的disabledState\r\n              //设置进制\r\n              ruleFied_.disabledState.autoIncrementSequence.binary = false\r\n              //设置step\r\n              ruleFied_.disabledState.autoIncrementSequence.step = false\r\n              //设置起始序列\r\n              ruleFied_.disabledState.autoIncrementSequence.startSequence = false\r\n              break;\r\n            }\r\n            default:\r\n              break\r\n          }\r\n          //设置每一个元素的resetStrategySelectOption的disabledState\r\n          ruleFied_.disabledState.resetStrategySelectOption = false\r\n          //设置每一个元素的resetStrategySelectOption的值\r\n          ruleFied_.resetStrategySelectOption = ruleField.ruleFieldResetStrategy\r\n          //设置editableTab的ruleFieldListForEachTab中每一个元素的值\r\n          editableTabs.value[editableTabIndex].ruleFieldListForEachTab[index] = ruleFied_\r\n        })\r\n      }\r\n    }\r\n\r\n    /**\r\n     * 删除规则\r\n     */\r\n    const handleDeleteRuleById = async (row) => {\r\n      const response = await deleteRuleById(row.id)\r\n      if (response.data.code === '200') {\r\n        ElMessage({\r\n          message: \"删除规则成功\",\r\n          type: \"success\",\r\n          plain: true,\r\n        });\r\n        //刷新方案列表\r\n        refreshRuleList()\r\n      } else {\r\n        ElMessage({\r\n          message: \"删除规则失败\",\r\n          type: \"error\",\r\n          plain: true,\r\n        });\r\n      }\r\n    }\r\n\r\n    //格式化方案启用状态\r\n    const ruleStatusFormatter = (row, column, cellValue) => {\r\n      return cellValue === '0' ? '启用' : '停用';\r\n    }\r\n    //格式化日期\r\n    const dateFormatter = (row, column, cellValue) => {\r\n      return dayjs(cellValue).format('YYYY-MM-DD HH:mm:ss');\r\n    }\r\n\r\n    //监控更新或编辑Dialog是否打开\r\n    watch(addOrEditRuleDialogVisible, (newValue, oldValue) => {\r\n      currentEditableTabIndex.value = 1\r\n      //如果处于关闭状态，就清空ediTabs的数据\r\n      if (!newValue) {\r\n        //将editableTabs中部分字段的值设置为初始值\r\n        editableTabs.value = [\r\n          {\r\n            title: '条码1生成规则',\r\n            name: 1,\r\n            //条码名称表达式\r\n            barCodeNamePlaceholder: `请输入条码1名称`,\r\n            //条码名称\r\n            barCodeName: '',\r\n            //存储每一个tab页中所有的ruleField\r\n            ruleFieldListForEachTab: [deepClone(TEMPLATE.RULE_FIELD_TEMPLATE)]\r\n          }\r\n        ]\r\n\r\n        //将rule中部分字段的值设置为初始值\r\n        const rule_ = deepClone(TEMPLATE.RULE_TEMPLATE)\r\n        Object.keys(rule_).forEach(key => {\r\n          rule[key] = rule_[key]\r\n        })\r\n      }\r\n    })\r\n\r\n    watch(conditions, async (newValue, oldValue) => {\r\n      if (newValue.ruleName.trim() == '') {\r\n        //页面打开时刷新规则列表\r\n        refreshRuleList()\r\n      } else {\r\n        const response = await getRulesByRuleNamePagination(pagingParameters, conditions)\r\n        if (response.status === 200) {\r\n          ruleList.value = response.data.list\r\n        } else {\r\n          ElMessage({\r\n            message: \"根据名称查询规则列表失败\",\r\n            type: \"error\",\r\n            plain: true,\r\n          });\r\n        }\r\n      }\r\n    })\r\n\r\n    //当方案被重新选择时，修改该方案下的级联选择用到的Options数据\r\n    const handleSchemeChange = async () => {\r\n      refreshCascaderOptions()\r\n    }\r\n\r\n    //监控方案下拉选择的变化\r\n    watch(rule, (newValue, oldValue) => {\r\n      if (newValue.schemeId == '') {\r\n        editableTabStyle['pointer-events'] = 'none'\r\n        addRuleFieldButtonIsEnable.value = true\r\n      } else {\r\n        editableTabStyle['pointer-events'] = 'auto'\r\n        addRuleFieldButtonIsEnable.value = false\r\n      }\r\n    })\r\n\r\n\r\n    return {\r\n      handleAddRuleField,\r\n      addOrEditRuleDialogVisible,\r\n      rule,\r\n      cascaderOptions,\r\n      dateFormatSelectOptions,\r\n      handleCascaderChange,\r\n      handleAddRule,\r\n      handleCloseDialo,\r\n      ruleFieldTypeSelectOptions,\r\n      handleRuleFieldTypeChange,\r\n      tabIndex,\r\n      currentEditableTabIndex,\r\n      editableTabs,\r\n      handleTabsEdit,\r\n      handleDeleteRuleField,\r\n      cascaderRef,\r\n      schemeOptions,\r\n      rules,\r\n      ruleFormRef,\r\n      ruleList,\r\n      handlePageSizeChange,\r\n      handleCurrentChange,\r\n      pagingParameters,\r\n      editableTabFormRef,\r\n      editableTabRules,\r\n      handleDeleteRuleById,\r\n      ruleStatusFormatter,\r\n      handleOpenAddRuleDialog,\r\n      handleOpenEditRuleDialog,\r\n      addOrEditRuleDialogTitle,\r\n      dateFormatter,\r\n      handleUpdateRule,\r\n      currentUpdateType,\r\n      conditions,\r\n      handleSchemeChange,\r\n      editableTabStyle,\r\n      addRuleFieldButtonIsEnable\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n.demo-tabs > .el-tabs__content {\r\n  padding: 32px;\r\n  color: #6b778c;\r\n  font-size: 32px;\r\n  font-weight: 600;\r\n}\r\n\r\n<style scoped></style>\r\n","import { render } from \"./Rule.vue?vue&type=template&id=9d0db350\"\nimport script from \"./Rule.vue?vue&type=script&lang=js\"\nexport * from \"./Rule.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["getDictsForTreeBySchemeIdAndLevelForCascader","params","request","url","schemeId","level","method","getDictsForTreeBySchemeIdForTree","conditions","addDict","dict","data","deleteDictByIdRecursive","id","getDictsForSelectOptionsByParentIdFromSchemeIdAndDictCode","dictCode","updateDict","addRule","getRulesBySchemeIdForSelect","getRulesPagination","pagingParameters","currentPage","pageSize","getRulesByRuleNamePagination","ruleName","deleteRuleById","updateRule","RuleFieldTypeEnum_","FIXED_CONSTANT","CODE","NAME","DROPDOWN_SELECT_INPUT","CASCADER_SELECT_INPUT","COMBINATION_FORMAT_DATA","AUTO_INCREMENT_SEQUENCE","BAR_CODE_NAME","FormItemTypeEnum_","FORM_ITEM_INPUT","FORM_ITEM_SELECT","FORM_ITEM_CASCADER","FORM_ITEM_AUTO_INCREMENT_SEQUENCE","TemplateEnum_","GENERATE_TEMPLATE","DESC","EXPORT_TEMPLATE","deepClone","obj","_","style","_createElementBlock","_Fragment","_createVNode","_component_el_row","default","_withCtx","_component_el_col","span","_component_el_button","type","plain","onClick","$setup","handleOpenAddRuleDialog","_createTextVNode","_component_el_form_item","label","_component_el_input","modelValue","_cache","$event","modelModifiers","lazy","clearable","placeholder","_component_el_table","ruleList","textAlign","_component_el_table_column","prop","formatter","ruleStatusFormatter","dateFormatter","sortable","fixed","scope","link","handleOpenEditRuleDialog","row","onClickOnce","handleDeleteRuleById","_createElementVNode","_hoisted_1","_component_el_pagination","layout","total","onSizeChange","handlePageSizeChange","onCurrentChange","handleCurrentChange","_component_el_dialog","addOrEditRuleDialogVisible","title","addOrEditRuleDialogTitle","width","handleCloseDialo","_component_el_form","model","rule","rules","ref","ruleNumber","_component_el_select","onChange","handleSchemeChange","_renderList","schemeOptions","schemeOption","index","_createBlock","_component_el_option","key","value","_component_el_switch","ruleStatus","ruleComments","_component_el_divider","_component_el_tabs","currentEditableTabIndex","editable","class","onEdit","handleTabsEdit","editableTabs","editableTab","_component_el_tab_pane","name","disabled","addRuleFieldButtonIsEnable","handleAddRuleField","editableTabRules","ref_for","barCodeNamePlaceholder","barCodeName","size","ruleFieldListForEachTab","_normalizeStyle","editableTabStyle","ruleFieldType","handleRuleFieldTypeChange","$index","ruleFieldTypeSelectOptions","ruleFieldTypeSelectOption","fixedConstant","disabledState","_component_el_cascader","options","cascaderOptions","cascaderSelectedOptions","filterable","handleCascaderChange","dateFormatSelectOption","_component_el_radio_group","autoIncrementSequence","binary","_component_el_radio_button","_component_el_input_number","min","startSequence","step","number","fillStrategy","enable","direction","length","character","resetStrategySelectOption","handleDeleteRuleField","currentUpdateType","handleAddRule","_createCommentVNode","handleUpdateRule","components","CaretBottom","CaretTop","setup","RuleFieldTypeEnum","reactive","overflow","scroll","TEMPLATE","RULE_TEMPLATE","ruleFieldList","RULE_FIELD_TEMPLATE","dropDownSelectOption","tabIndex","dateFormatSelectOptions","cascaderRef","ruleFormRef","required","message","trigger","max","refreshRuleList","async","response","status","list","ElMessage","refreshSchemeOptions","getSchemesForSelectInput","code","schemeList","forEach","scheme","push","schemeName","onMounted","Object","keys","targetName","action","newTabIndex","filter","Math","validateEdiTableBarCodeName","callback","pattern","Error","test","validator","editableTabFormRef","validateForm","validateResultListAsync","validateResult","validate","valid","i","ruleFieldIsSelectedErrorMessages","ruleFieldSelectedIsSettingValueErrorMessages","cascaderSelectLabels","getCheckedNodes","editableTabIndex","element","ruleFieldIndex","ruleField","numberPattern","numberAndEnglishCharaterPattern","trim","ruleFieldSelectedIsSettingValueErrorMessage","ruleFieldCategoryCode","ruleFieldCategoryName","ruleFieldName","ruleFieldValue","ruleFieldFillStrategy","JSON","stringify","ruleFieldResetStrategy","ruleFieldAssociationTabIndex","cascaderOptionValue","cascaderOptionLabel","shift","fileTypeIndex","ruleFieldStoreTableName","rule_","error","console","log","watch","newVal","oldVal","fillStrategyIsEnable","deep","refreshCascaderOptions","getDictsForTreeBySchemeIdAndLevelForCascaderResponse","cascaderOptionsJSON","undefined","children","currentRuleField","splice","ruleId","createTime","updateTime","editableTabNums","ruleFied_","parse","column","cellValue","dayjs","format","newValue","oldValue","__exports__","render"],"sourceRoot":""}