{"version":3,"file":"js/336.31fc0c92.js","mappings":"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","sources":["webpack://qrcode-generator-webui/./src/views/Scheme.vue","webpack://qrcode-generator-webui/./src/views/Scheme.vue?a8c5"],"sourcesContent":["<template>\r\n  <!-- 新增方案dialog开始 -->\r\n  <el-dialog v-model=\"schemeDialogTableVisible\" :title=\"dialogTitle\" width=\"500\">\r\n    <el-form :model=\"scheme\" :rules=\"rules\" ref=\"schemeFormRef\">\r\n      <el-form-item label=\"方案名称\" prop=\"schemeName\" :label-width=\"formLabelWidth\">\r\n        <el-input v-model=\"scheme.schemeName\" autocomplete=\"off\" />\r\n      </el-form-item>\r\n      <el-form-item label=\"方案备注\" :label-width=\"formLabelWidth\">\r\n        <el-input v-model=\"scheme.schemeComments\" autocomplete=\"off\" type=\"textarea\" />\r\n      </el-form-item>\r\n      <el-form-item label=\"启用状态\" :label-width=\"formLabelWidth\">\r\n        <el-switch v-model=\"scheme.schemeStatus\" autocomplete=\"off\" />\r\n      </el-form-item>\r\n    </el-form>\r\n    <template #footer>\r\n      <div class=\"dialog-footer\">\r\n        <el-button @click=\"schemeDialogTableVisible = false\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"handleAddScheme\" v-if=\"operateType == 'ADD'\">\r\n          保存\r\n        </el-button>\r\n        <el-button type=\"primary\" @click=\"handleUpdateScheme\" v-if=\"operateType == 'UPDATE'\">\r\n          更新\r\n        </el-button>\r\n      </div>\r\n    </template>\r\n  </el-dialog>\r\n  <!-- 新增方案dialog结束 -->\r\n  <el-row style=\"padding-left: 20px;padding-right: 20px;padding-top: 20px;\">\r\n    <el-col :span=\"2\">\r\n      <el-button type=\"success\" plain @click=\"handleOpenAddSchemeDialog\">新增方案</el-button>\r\n    </el-col>\r\n    <el-col :span=\"5\">\r\n      <el-form-item label=\"请输入方案名称：\">\r\n        <el-input v-model.lazy=\"conditions.schemeName\" style=\"width: 240px\" clearable placeholder=\"请输入方案名称\" />\r\n      </el-form-item>\r\n    </el-col>\r\n  </el-row>\r\n\r\n  <el-row style=\"padding-left: 20px;padding-right: 20px;\">\r\n    <!-- 展示方案列表开始 -->\r\n    <el-table :data=\"schemeList\" :cell-style=\"{ textAlign: 'center' }\" :header-cell-style=\"{ textAlign: 'center' }\" style=\"height: 650px;\">\r\n      <el-table-column type=\"index\" />\r\n      <el-table-column property=\"schemeName\" label=\"方案名称\" />\r\n      <el-table-column property=\"schemeComments\" label=\"方案备注\" />\r\n      <el-table-column property=\"schemeStatus\" :formatter=\"schemeStatusFormatter\" label=\"启用状态\" />\r\n      <el-table-column prop=\"createTime\" :formatter=\"dateFormatter\" sortable label=\"创建时间\" />\r\n      <el-table-column prop=\"updateTime\" :formatter=\"dateFormatter\" sortable label=\"更新时间\" />\r\n      <el-table-column fixed=\"right\" label=\"操作\">\r\n        <template v-slot=\"scope\">\r\n          <el-button link type=\"primary\" @click=\"handleOpenEditSchemeDialog(scope.row)\">\r\n            编辑\r\n          </el-button>\r\n          <el-button link type=\"primary\" @click.once=\"handleDeleteSchemeById(scope.row)\">删除</el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n    <div style=\"margin-top:10px\">\r\n      <el-pagination v-model:current-page=\"pagingParameters.currentPage\" v-model:page-size=\"pagingParameters.pageSize\"\r\n        :page-sizes=\"[5, 10, 20, 50]\"\r\n        layout=\"total, sizes, prev, pager, next, jumper\" :total=\"pagingParameters.total\"\r\n        @size-change=\"handlePageSizeChange\" @current-change=\"handleCurrentChange\" />\r\n    </div>\r\n    <!-- 展示方案列表结束 -->\r\n  </el-row>\r\n</template>\r\n\r\n<script>\r\nimport { reactive, ref, onMounted, watch } from \"vue\";\r\nimport { ElMessage } from \"element-plus\";\r\nimport { addScheme, getSchemesPagination, getSchemesBySchemeNamePagination, deleteSchemeById, updateScheme } from '@/api/scheme.js'\r\nimport _ from 'lodash'\r\n//格式化日期插件\r\nimport dayjs from 'dayjs';\r\n\r\nexport default {\r\n  name: \"Scheme\",\r\n  setup() {\r\n    //scheme面板是否显示\r\n    const schemeDialogTableVisible = ref(false)\r\n    //面板标题\r\n    const dialogTitle = ref('新增方案')\r\n    //操作类型\r\n    const operateType = ref('UPDATE')\r\n\r\n    //表单项宽度\r\n    const formLabelWidth = '140px'\r\n    //表单引用，用于表单校验\r\n    const schemeFormRef = ref(null)\r\n\r\n    //方案实体模板\r\n    const SCHEME_TEMPLATE = {\r\n      //id\r\n      id: null,\r\n      //方案标识\r\n      schemeId: null,\r\n      //方案名称\r\n      schemeName: null,\r\n      //方案备注\r\n      schemeComments: null,\r\n      //方案启用状态\r\n      schemeStatus: true,\r\n      //创建时间\r\n      createTime: null,\r\n      //更新时间\r\n      updateTime: null,\r\n    }\r\n\r\n    //方案实体\r\n    const scheme = reactive(_.cloneDeep(SCHEME_TEMPLATE))\r\n\r\n    //查询条件\r\n    const conditions = reactive({\r\n      schemeName: null\r\n    })\r\n\r\n    //封装分页参数\r\n    const pagingParameters = reactive({\r\n      currentPage: 1,\r\n      pageSize: 10,\r\n      total: 0\r\n    })\r\n\r\n    //查询出来的所有方案\r\n    const schemeList = ref([])\r\n\r\n    /**\r\n     * 刷新方案列表\r\n     */\r\n    const refreshSchemeList = async () => {\r\n      const response = await getSchemesPagination(pagingParameters)\r\n      if (response.code == 200) {\r\n        //设置列表数据\r\n        schemeList.value = response.data.list\r\n        //设置分页总页数\r\n        pagingParameters.total = response.data.total\r\n      } else {\r\n        ElMessage({\r\n          message: \"查询方案列表失败\",\r\n          type: \"error\",\r\n          plain: true,\r\n        });\r\n      }\r\n    }\r\n    \r\n\r\n    onMounted(async () => {\r\n      //初次打开页面时查询方案列表\r\n      refreshSchemeList()\r\n      //获取总条数\r\n    })\r\n\r\n    /**\r\n     * 打开新增方案Dialog\r\n     */\r\n    const handleOpenAddSchemeDialog = () => {\r\n      schemeDialogTableVisible.value = true\r\n      dialogTitle.value = '新增方案'\r\n      operateType.value = 'ADD'\r\n    }\r\n\r\n    /**\r\n     * 真正执行保存方案的操作\r\n     */\r\n    const doHandleAddScheme = async () => {\r\n      //执行保存操作\r\n      const response = await addScheme(scheme)\r\n      if (response.data.code === '200') {\r\n        //提示保存成功\r\n        ElMessage({\r\n          message: \"保存方案成功\",\r\n          type: \"success\",\r\n          plain: true,\r\n        });\r\n        //关闭Dialog\r\n        schemeDialogTableVisible.value = false\r\n        //清除方案实体中的缓存数据\r\n        const scheme_ = _.cloneDeep(SCHEME_TEMPLATE)\r\n        Object.keys(scheme_).forEach(key => {\r\n          scheme[key] = scheme_[key]\r\n        });\r\n        //刷新方案列表\r\n        refreshSchemeList()\r\n      } else {\r\n        ElMessage({\r\n          message: \"保存方案失败\",\r\n          type: \"error\",\r\n          plain: true,\r\n        });\r\n      }\r\n    }\r\n    /**\r\n     * 新增方案\r\n     */\r\n    const handleAddScheme = () => {\r\n      //表单校验\r\n      schemeFormRef.value.validate((valid) => {\r\n        if (valid) {\r\n          doHandleAddScheme()\r\n        }\r\n      })\r\n    }\r\n\r\n    //删除方案\r\n    const handleDeleteSchemeById = async (row) => {\r\n      const response = await deleteSchemeById(row.id)\r\n      if (response.data.code === '200') {\r\n        ElMessage({\r\n          message: \"删除方案成功\",\r\n          type: \"success\",\r\n          plain: true,\r\n        });\r\n        //刷新方案列表\r\n        refreshSchemeList()\r\n      } else {\r\n        ElMessage({\r\n          message: \"删除方案失败\",\r\n          type: \"error\",\r\n          plain: true,\r\n        });\r\n      }\r\n    }\r\n\r\n    //打开编辑方案Dialog\r\n    const handleOpenEditSchemeDialog = (row) => {\r\n      schemeDialogTableVisible.value = true\r\n      operateType.value = 'UPDATE'\r\n      dialogTitle.value = '编辑方案'\r\n      Object.keys(row).forEach(key => {\r\n        scheme[key] = row[key]\r\n      })\r\n      //单独处理方案启用状态\r\n      scheme.schemeStatus = scheme.schemeStatus === '0' ? true : false\r\n    }\r\n\r\n    /**\r\n     * 真正执行更新方案的操作\r\n     */\r\n    const doHandleUpdateScheme = async () => {\r\n      //执行更新操作\r\n      const response = await updateScheme(scheme)\r\n      if (response.data.code === '200') {\r\n        //提示更新成功\r\n        ElMessage({\r\n          message: \"更新方案成功\",\r\n          type: \"success\",\r\n          plain: true,\r\n        });\r\n        //关闭Dialog\r\n        schemeDialogTableVisible.value = false\r\n        //清除方案实体中的缓存数据\r\n        const scheme_ = _.cloneDeep(SCHEME_TEMPLATE)\r\n        Object.keys(scheme_).forEach(key => {\r\n          scheme[key] = scheme_[key]\r\n        });\r\n        //刷新方案列表\r\n        refreshSchemeList()\r\n      } else {\r\n        ElMessage({\r\n          message: \"更新方案失败\",\r\n          type: \"error\",\r\n          plain: true,\r\n        });\r\n      }\r\n    }\r\n\r\n    /**\r\n     * 更新方案信息\r\n     */\r\n    const handleUpdateScheme = () => {\r\n      //表单校验\r\n      schemeFormRef.value.validate((valid) => {\r\n        if (valid) {\r\n          doHandleUpdateScheme()\r\n        }\r\n      })\r\n    }\r\n\r\n    //调整pageSize大小\r\n    const handlePageSizeChange = async () => {\r\n      refreshSchemeList()\r\n    }\r\n    //调整currentChange大小\r\n    const handleCurrentChange = async () => {\r\n      refreshSchemeList()\r\n    }\r\n\r\n    //格式化方案启用状态\r\n    const schemeStatusFormatter = (row, column, cellValue) => {\r\n      return cellValue === '0' ? '启用' : '停用';\r\n    }\r\n\r\n    //定义表单校验规则\r\n    const rules = reactive({\r\n      schemeName: [\r\n        { required: true, message: '请输入方案名称', trigger: 'blur' },\r\n        { min: 1, max: 50, message: '规则名称的长度应该介于1到50之间', trigger: 'blur' },\r\n      ],\r\n    })\r\n\r\n    //格式化日期\r\n    const dateFormatter = (row, column, cellValue) => {\r\n      return dayjs(cellValue).format('YYYY-MM-DD HH:mm:ss');\r\n    }\r\n\r\n    watch(conditions, async (newValue, oldValue) => {\r\n      if (newValue.schemeName.trim() == '') {\r\n        refreshSchemeList()\r\n      } else {\r\n        const response = await getSchemesBySchemeNamePagination(pagingParameters, conditions)\r\n        if (response.code == 200) {\r\n          schemeList.value = response.data.list\r\n        } else {\r\n          ElMessage({\r\n            message: \"刷新查询方案列表失败\",\r\n            type: \"error\",\r\n            plain: true,\r\n          });\r\n        }\r\n      }\r\n    })\r\n\r\n    return {\r\n      schemeDialogTableVisible,\r\n      conditions,\r\n      scheme,\r\n      formLabelWidth,\r\n      schemeList,\r\n      handleAddScheme,\r\n      handleDeleteSchemeById,\r\n      pagingParameters,\r\n      handlePageSizeChange,\r\n      handleCurrentChange,\r\n      schemeStatusFormatter,\r\n      handleOpenEditSchemeDialog,\r\n      dialogTitle,\r\n      handleUpdateScheme,\r\n      operateType,\r\n      handleOpenAddSchemeDialog,\r\n      rules,\r\n      schemeFormRef,\r\n      dateFormatter,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped></style>\r\n","import { render } from \"./Scheme.vue?vue&type=template&id=395e69ad\"\nimport script from \"./Scheme.vue?vue&type=script&lang=js\"\nexport * from \"./Scheme.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["class","style","_createElementBlock","_Fragment","_createVNode","_component_el_dialog","modelValue","$setup","schemeDialogTableVisible","_cache","$event","title","dialogTitle","width","footer","_withCtx","_createElementVNode","_hoisted_1","_component_el_button","onClick","default","_createTextVNode","_","operateType","_createBlock","key","type","handleAddScheme","_createCommentVNode","handleUpdateScheme","_component_el_form","model","scheme","rules","ref","_component_el_form_item","label","prop","formLabelWidth","_component_el_input","schemeName","autocomplete","schemeComments","_component_el_switch","schemeStatus","_component_el_row","_component_el_col","span","plain","handleOpenAddSchemeDialog","conditions","modelModifiers","lazy","clearable","placeholder","_component_el_table","data","schemeList","textAlign","_component_el_table_column","property","formatter","schemeStatusFormatter","dateFormatter","sortable","fixed","scope","link","handleOpenEditSchemeDialog","row","onClickOnce","handleDeleteSchemeById","_hoisted_2","_component_el_pagination","pagingParameters","currentPage","pageSize","layout","total","onSizeChange","handlePageSizeChange","onCurrentChange","handleCurrentChange","name","setup","schemeFormRef","SCHEME_TEMPLATE","id","schemeId","createTime","updateTime","reactive","refreshSchemeList","async","response","getSchemesPagination","code","value","list","ElMessage","message","onMounted","doHandleAddScheme","addScheme","scheme_","Object","keys","forEach","validate","valid","deleteSchemeById","doHandleUpdateScheme","updateScheme","column","cellValue","required","trigger","min","max","dayjs","format","watch","newValue","oldValue","trim","getSchemesBySchemeNamePagination","__exports__","render"],"sourceRoot":""}