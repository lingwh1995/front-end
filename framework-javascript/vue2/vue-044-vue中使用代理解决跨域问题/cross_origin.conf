server {
    #前端项目和后端项目被nginx代理后统一用这个接口访问
    listen       8888;
    
    #前端项目和后端项目被nginx代理后统一用这个域名访问
    server_name  localhost;
    
    #如果访问的路径是/，nginx会将请求转发到下面的proxy_pass中配置的地址
    location /{    	
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
	add_header 'Access-Control-Allow-Headers' 'DNT,web-token,app-token,Authorization,Accept,Origin,Keep-Alive,User-Agent,X-Mx-ReqToken,X-Data-Type,X-Auth-Token,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
        #proxy_pass 你要跨域的第一个接口地址
        proxy_pass    http://localhost:8080/;
    }
    
    #如果访问的路径是以/api开头，nginx会将请求转发到下面的proxy_pass中配置的地址
    location ^~/api/{
       add_header 'Access-Control-Allow-Origin' '*';
       add_header 'Access-Control-Allow-Credentials' 'true';
       add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
       add_header 'Access-Control-Allow-Headers' 'DNT,web-token,app-token,Authorization,Accept,Origin,Keep-Alive,User-Agent,X-Mx-ReqToken,X-Data-Type,X-Auth-Token,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
       add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
       rewrite ^~/api/(.*)$ /$1 break;
       #proxy_pass 你要跨域的第二个接口地址
       proxy_pass http://localhost:5000;
    }
}
    

