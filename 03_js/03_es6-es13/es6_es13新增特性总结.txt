ES6（ECMAScript 2015）

    发布时间：2015 年
    核心特性：
        声明方式：let（块级作用域变量）、const（常量）
        函数：箭头函数（=>）、默认参数（function(a=1){}）、剩余参数（...args）
        数据结构：Map（键值对集合）、Set（唯一值集合）、WeakMap、WeakSet
        字符串：模板字符串（${}）、includes()、startsWith()、endsWith()
        对象：对象字面量简化（属性简写、方法简写）、Object.assign()
        模块化：import/export
        其他：for...of循环、解构赋值（数组 / 对象）、Promise

ES7（ECMAScript 2016）

    发布时间：2016 年
    核心特性：
        指数运算符（**，如2**3=8）
        数组方法：Array.prototype.includes()（判断数组是否包含某元素）

ES8（ECMAScript 2017）

    发布时间：2017 年
    核心特性：
        字符串：padStart()、padEnd()（填充字符串）
        函数：async/await（异步编程语法糖，基于 Promise）
        对象：Object.values()（获取对象值数组）、Object.entries()（获取键值对数组）、Object.getOwnPropertyDescriptors()
        尾逗号允许：函数参数、数组 / 对象字面量末尾可加逗号

ES9（ECMAScript 2018）

    发布时间：2018 年
    核心特性：
        异步迭代：for await...of（遍历异步可迭代对象）
        正则增强：命名捕获组（(?<name>...)）、反向断言（(?<=...)/(?<!...)）、s修饰符（.匹配换行符）
        对象：扩展运算符（...）支持对象（浅拷贝）
        Promise.prototype.finally()（无论成功 / 失败都执行的回调）

ES10（ECMAScript 2019）

    发布时间：2019 年
    核心特性：
        字符串：trimStart()、trimEnd()（去除首尾空白，更语义化）
        数组：Array.prototype.flat()（扁平化数组）、flatMap()（映射后扁平化）
        对象：Object.fromEntries()（将键值对数组转为对象，与entries反向）
        函数：Function.prototype.toString()（返回函数完整源码，包括注释）
        其他：Symbol.prototype.description（获取 Symbol 的描述）、可选 catch 参数（try { ... } catch { ... }）

ES11（ECMAScript 2020）

    发布时间：2020 年
    核心特性：
        空值处理：?.（可选链运算符，如obj?.a?.b）、??（空值合并运算符，a ?? b表示 a 为null/undefined时取 b）
        动态导入：import()（返回 Promise，支持按需加载模块）
        字符串：matchAll()（返回正则匹配的所有结果迭代器）
        全局对象：globalThis（统一浏览器 / Node 环境的全局对象）
        模块：import.meta（模块元数据）
        数组：Array.prototype.at()（支持负索引访问，如arr.at(-1)取最后一个元素）

ES12（ECMAScript 2021）

    发布时间：2021 年
    核心特性：
        逻辑赋值运算符：||=（a ||= b等价于a = a || b）、&&=、??=
        数字分隔符：1_000_000（增强大数字可读性）
        Promise：Promise.any()（接收多个 Promise，返回第一个成功的结果）
        字符串：replaceAll()（替换所有匹配项，无需正则g修饰符）
        弱引用：WeakRef（弱引用对象，不阻止垃圾回收）、FinalizationRegistry（对象被回收时触发回调）

ES13（ECMAScript 2022）

    发布时间：2022 年
    核心特性：
        类：
            类字段声明（无需在构造函数中定义，如class A { x = 1; }）
            私有方法和字段（#前缀，如#privateMethod()）
            静态类字段和方法（static x = 1;）、静态私有字段（static #y = 2;）
        数组：Array.prototype.findLast()、findLastIndex()（从末尾开始查找）
        at()方法扩展：支持字符串和 TypedArray（如'abc'.at(-1) // 'c'）
        RegExp：d修饰符（匹配结果包含开始 / 结束索引）